{"ast":null,"code":"var _jsxFileName = \"/home/melnik/dev/jstack/mycontacts/web/src/components/ContactForm/index.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport isEmailValid from '../../utils/isEmailValid';\nimport formatPhone from '../../utils/formatPhone';\nimport useErrors from '../../hooks/useErrors';\nimport CategoriesService from '../../services/CategoriesService';\nimport { Form, ButtonContainer } from './styles';\nimport FormGroup from '../FormGroup';\nimport Input from '../Input';\nimport Select from '../Select';\nimport Button from '../Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ContactForm(_ref) {\n  _s();\n\n  let {\n    buttonLabel\n  } = _ref;\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [phone, setPhone] = useState('');\n  const [category, setCategory] = useState('');\n  const {\n    errors,\n    setError,\n    removeError,\n    getErrorMessageByFieldName\n  } = useErrors();\n  const isFormValid = name && errors.length === 0;\n  useEffect(() => {\n    async function loadCategories() {\n      const categoriesList = await CategoriesService.listCategories();\n      console.log(categoriesList);\n    }\n\n    loadCategories();\n  }, []);\n\n  function handleNameChange(event) {\n    setName(event.target.value);\n\n    if (!event.target.value) {\n      setError({\n        field: 'name',\n        message: 'Nome é obrigatório!'\n      });\n    } else {\n      removeError('name');\n    }\n  }\n\n  function handleEmailChange(event) {\n    setEmail(event.target.value);\n\n    if (event.target.value && !isEmailValid(event.target.value)) {\n      setError({\n        field: 'email',\n        message: 'E-mail inválido'\n      });\n    } else {\n      removeError('email');\n    }\n  }\n\n  function handlePhoneChange(event) {\n    setPhone(formatPhone(event.target.value));\n  }\n\n  function handleSubmit(event) {\n    console.log({\n      name,\n      email,\n      phone: phone.replace(/\\D/g, ''),\n      category\n    });\n    event.preventDefault();\n  }\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit,\n    noValidate: true,\n    children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n      error: getErrorMessageByFieldName('name'),\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        error: getErrorMessageByFieldName('name'),\n        placeholder: \"Nome*\",\n        value: name,\n        onChange: handleNameChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n      error: getErrorMessageByFieldName('email'),\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        type: \"email\",\n        error: getErrorMessageByFieldName('email'),\n        placeholder: \"E-mail\",\n        value: email,\n        onChange: handleEmailChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Telefone\",\n        value: phone,\n        onChange: handlePhoneChange,\n        maxLength: \"15\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        value: category,\n        onChange: event => setCategory(event.target.value),\n        children: /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"instagram\",\n          children: \"Instagram\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonContainer, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        disabled: !isFormValid,\n        children: buttonLabel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ContactForm, \"L8NudP5YQ4R3C5wwiMKpRstts1Y=\", false, function () {\n  return [useErrors];\n});\n\n_c = ContactForm;\nContactForm.propTypes = {\n  buttonLabel: PropTypes.string.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"names":["PropTypes","useState","useEffect","isEmailValid","formatPhone","useErrors","CategoriesService","Form","ButtonContainer","FormGroup","Input","Select","Button","ContactForm","buttonLabel","name","setName","email","setEmail","phone","setPhone","category","setCategory","errors","setError","removeError","getErrorMessageByFieldName","isFormValid","length","loadCategories","categoriesList","listCategories","console","log","handleNameChange","event","target","value","field","message","handleEmailChange","handlePhoneChange","handleSubmit","replace","preventDefault","propTypes","string","isRequired"],"sources":["/home/melnik/dev/jstack/mycontacts/web/src/components/ContactForm/index.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\n\nimport isEmailValid from '../../utils/isEmailValid';\nimport formatPhone from '../../utils/formatPhone';\nimport useErrors from '../../hooks/useErrors';\nimport CategoriesService from '../../services/CategoriesService';\n\nimport { Form, ButtonContainer } from './styles';\n\nimport FormGroup from '../FormGroup';\nimport Input from '../Input';\nimport Select from '../Select';\nimport Button from '../Button';\n\nexport default function ContactForm({ buttonLabel }) {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [phone, setPhone] = useState('');\n  const [category, setCategory] = useState('');\n\n  const {\n    errors, setError, removeError, getErrorMessageByFieldName,\n  } = useErrors();\n\n  const isFormValid = (name && errors.length === 0);\n\n  useEffect(() => {\n    async function loadCategories() {\n      const categoriesList = await CategoriesService.listCategories();\n\n      console.log(categoriesList);\n    }\n\n    loadCategories();\n  }, []);\n\n  function handleNameChange(event) {\n    setName(event.target.value);\n\n    if (!event.target.value) {\n      setError({ field: 'name', message: 'Nome é obrigatório!' });\n    } else {\n      removeError('name');\n    }\n  }\n\n  function handleEmailChange(event) {\n    setEmail(event.target.value);\n\n    if (event.target.value && !isEmailValid(event.target.value)) {\n      setError({ field: 'email', message: 'E-mail inválido' });\n    } else {\n      removeError('email');\n    }\n  }\n\n  function handlePhoneChange(event) {\n    setPhone(formatPhone(event.target.value));\n  }\n\n  function handleSubmit(event) {\n    console.log({\n      name, email, phone: phone.replace(/\\D/g, ''), category,\n    });\n\n    event.preventDefault();\n  }\n\n  return (\n    <Form onSubmit={handleSubmit} noValidate>\n      <FormGroup error={getErrorMessageByFieldName('name')}>\n        <Input\n          error={getErrorMessageByFieldName('name')}\n          placeholder=\"Nome*\"\n          value={name}\n          onChange={handleNameChange}\n        />\n      </FormGroup>\n\n      <FormGroup error={getErrorMessageByFieldName('email')}>\n        <Input\n          type=\"email\"\n          error={getErrorMessageByFieldName('email')}\n          placeholder=\"E-mail\"\n          value={email}\n          onChange={handleEmailChange}\n        />\n      </FormGroup>\n\n      <FormGroup>\n        <Input\n          placeholder=\"Telefone\"\n          value={phone}\n          onChange={handlePhoneChange}\n          maxLength=\"15\"\n        />\n      </FormGroup>\n\n      <FormGroup>\n        <Select\n          value={category}\n          onChange={(event) => setCategory(event.target.value)}\n        >\n          <option value=\"instagram\">Instagram</option>\n        </Select>\n      </FormGroup>\n\n      <ButtonContainer>\n        <Button type=\"submit\" disabled={!isFormValid}>\n          {buttonLabel}\n        </Button>\n      </ButtonContainer>\n    </Form>\n  );\n}\n\nContactForm.propTypes = {\n  buttonLabel: PropTypes.string.isRequired,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}