{"ast":null,"code":"import HttpClient from './utils/HttpClient';\n\nclass ContactsService {\n  constructor() {\n    this.httpClient = new HttpClient('http://localhost:30012');\n  }\n\n  async listContacts() {\n    let orderBy = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'asc';\n    return this.httpClient.get(`/contactss?orderBy=${orderBy}`);\n  }\n\n  async createContact(contact) {\n    return this.httpClient.post('/contacts', contact);\n  }\n\n}\n\nexport default new ContactsService();","map":{"version":3,"names":["HttpClient","ContactsService","constructor","httpClient","listContacts","orderBy","get","createContact","contact","post"],"sources":["/home/melnik/dev/jstack/mycontacts/web/src/services/ContactsService.js"],"sourcesContent":["import HttpClient from './utils/HttpClient';\n\nclass ContactsService {\n  constructor() {\n    this.httpClient = new HttpClient('http://localhost:30012');\n  }\n\n  async listContacts(orderBy = 'asc') {\n    return this.httpClient.get(`/contactss?orderBy=${orderBy}`);\n  }\n\n  async createContact(contact) {\n    return this.httpClient.post('/contacts', contact);\n  }\n}\n\nexport default new ContactsService();\n"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,oBAAvB;;AAEA,MAAMC,eAAN,CAAsB;EACpBC,WAAW,GAAG;IACZ,KAAKC,UAAL,GAAkB,IAAIH,UAAJ,CAAe,wBAAf,CAAlB;EACD;;EAEiB,MAAZI,YAAY,GAAkB;IAAA,IAAjBC,OAAiB,uEAAP,KAAO;IAClC,OAAO,KAAKF,UAAL,CAAgBG,GAAhB,CAAqB,sBAAqBD,OAAQ,EAAlD,CAAP;EACD;;EAEkB,MAAbE,aAAa,CAACC,OAAD,EAAU;IAC3B,OAAO,KAAKL,UAAL,CAAgBM,IAAhB,CAAqB,WAArB,EAAkCD,OAAlC,CAAP;EACD;;AAXmB;;AActB,eAAe,IAAIP,eAAJ,EAAf"},"metadata":{},"sourceType":"module"}