{"ast":null,"code":"var _jsxFileName = \"/home/melnik/dev/jstack/mycontacts/web/src/components/Loader/index.js\",\n  _s = $RefreshSig$();\nimport PropTypes from 'prop-types';\nimport ReactPortal from '../ReactPortal';\nimport { Overlay } from './styles';\nimport Spinner from '../Spinner';\nimport useAnimatedUnmount from '../../hooks/useAnimatedUnmount';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Loader(_ref) {\n  _s();\n  let {\n    isLoading\n  } = _ref;\n  const {\n    shouldRender,\n    animattedElementRef\n  } = useAnimatedUnmount(isLoading);\n  if (!shouldRender) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(ReactPortal, {\n    containerId: \"loader-root\",\n    children: /*#__PURE__*/_jsxDEV(Overlay, {\n      isLeaving: !isLoading,\n      ref: animattedElementRef,\n      children: /*#__PURE__*/_jsxDEV(Spinner, {\n        size: 90\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(Loader, \"K0ZkG8Xki697BILKfUXC1kRcXoU=\", false, function () {\n  return [useAnimatedUnmount];\n});\n_c = Loader;\nLoader.propTypes = {\n  isLoading: PropTypes.bool.isRequired\n};\nvar _c;\n$RefreshReg$(_c, \"Loader\");","map":{"version":3,"names":["PropTypes","ReactPortal","Overlay","Spinner","useAnimatedUnmount","jsxDEV","_jsxDEV","Loader","_ref","_s","isLoading","shouldRender","animattedElementRef","containerId","children","isLeaving","ref","size","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","bool","isRequired","$RefreshReg$"],"sources":["/home/melnik/dev/jstack/mycontacts/web/src/components/Loader/index.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport ReactPortal from '../ReactPortal';\n\nimport { Overlay } from './styles';\nimport Spinner from '../Spinner';\n\nimport useAnimatedUnmount from '../../hooks/useAnimatedUnmount';\n\nexport default function Loader({ isLoading }) {\n  const { shouldRender, animattedElementRef } = useAnimatedUnmount(isLoading);\n\n  if (!shouldRender) {\n    return null;\n  }\n\n  return (\n    <ReactPortal containerId=\"loader-root\">\n      <Overlay isLeaving={!isLoading} ref={animattedElementRef}>\n        <Spinner size={90} />\n      </Overlay>\n    </ReactPortal>\n  );\n}\n\nLoader.propTypes = {\n  isLoading: PropTypes.bool.isRequired,\n};\n"],"mappings":";;AAAA,OAAOA,SAAS,MAAM,YAAY;AAClC,OAAOC,WAAW,MAAM,gBAAgB;AAExC,SAASC,OAAO,QAAQ,UAAU;AAClC,OAAOC,OAAO,MAAM,YAAY;AAEhC,OAAOC,kBAAkB,MAAM,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,eAAe,SAASC,MAAMA,CAAAC,IAAA,EAAgB;EAAAC,EAAA;EAAA,IAAf;IAAEC;EAAU,CAAC,GAAAF,IAAA;EAC1C,MAAM;IAAEG,YAAY;IAAEC;EAAoB,CAAC,GAAGR,kBAAkB,CAACM,SAAS,CAAC;EAE3E,IAAI,CAACC,YAAY,EAAE;IACjB,OAAO,IAAI;EACb;EAEA,oBACEL,OAAA,CAACL,WAAW;IAACY,WAAW,EAAC,aAAa;IAAAC,QAAA,eACpCR,OAAA,CAACJ,OAAO;MAACa,SAAS,EAAE,CAACL,SAAU;MAACM,GAAG,EAAEJ,mBAAoB;MAAAE,QAAA,eACvDR,OAAA,CAACH,OAAO;QAACc,IAAI,EAAE;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAG;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACb;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAElB;AAACZ,EAAA,CAduBF,MAAM;EAAA,QACkBH,kBAAkB;AAAA;AAAAkB,EAAA,GAD1Cf,MAAM;AAgB9BA,MAAM,CAACgB,SAAS,GAAG;EACjBb,SAAS,EAAEV,SAAS,CAACwB,IAAI,CAACC;AAC5B,CAAC;AAAC,IAAAH,EAAA;AAAAI,YAAA,CAAAJ,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}