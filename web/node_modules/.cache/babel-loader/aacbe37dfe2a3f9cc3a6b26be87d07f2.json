{"ast":null,"code":"var _jsxFileName = \"/home/melnik/dev/jstack/mycontacts/web/src/components/Toast/ToastContainer/index.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { toastEventManager } from '../../../utils/toast';\nimport ToastMessage from '../ToastMessage';\nimport { Container } from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ToastContainer() {\n  _s();\n\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    function handleAddToast(_ref) {\n      let {\n        type,\n        text\n      } = _ref;\n      setMessages(prevState => [...prevState, {\n        id: Math.random(),\n        type,\n        text\n      }]);\n    }\n\n    toastEventManager.on('addtoast', handleAddToast);\n    return () => {\n      toastEventManager.removeListener('addtoast', handleAddToast);\n    };\n  }, []);\n\n  function handleRemoveMessage(id) {\n    console.log('remove message');\n    console.log({\n      id\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: messages.map(message => /*#__PURE__*/_jsxDEV(ToastMessage, {\n      type: message.type,\n      text: message.text,\n      onRemoveMessage: handleRemoveMessage\n    }, message.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ToastContainer, \"RyA59LRbn9goj/9N7rELX+NWNVI=\");\n\n_c = ToastContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToastContainer\");","map":{"version":3,"names":["useEffect","useState","toastEventManager","ToastMessage","Container","ToastContainer","messages","setMessages","handleAddToast","type","text","prevState","id","Math","random","on","removeListener","handleRemoveMessage","console","log","map","message"],"sources":["/home/melnik/dev/jstack/mycontacts/web/src/components/Toast/ToastContainer/index.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { toastEventManager } from '../../../utils/toast';\nimport ToastMessage from '../ToastMessage';\nimport { Container } from './styles';\n\nexport default function ToastContainer() {\n  const [messages, setMessages] = useState([]);\n\n  useEffect(() => {\n    function handleAddToast({ type, text }) {\n      setMessages((prevState) => [\n        ...prevState,\n        { id: Math.random(), type, text },\n      ]);\n    }\n\n    toastEventManager.on('addtoast', handleAddToast);\n\n    return () => {\n      toastEventManager.removeListener('addtoast', handleAddToast);\n    };\n  }, []);\n\n  function handleRemoveMessage(id) {\n    console.log('remove message');\n    console.log({ id });\n  }\n\n  return (\n    <Container>\n      {messages.map((message) => (\n        <ToastMessage\n          key={message.id}\n          type={message.type}\n          text={message.text}\n          onRemoveMessage={handleRemoveMessage}\n        />\n      ))}\n    </Container>\n  );\n}\n"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,iBAAT,QAAkC,sBAAlC;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,SAASC,SAAT,QAA0B,UAA1B;;AAEA,eAAe,SAASC,cAAT,GAA0B;EAAA;;EACvC,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;EAEAD,SAAS,CAAC,MAAM;IACd,SAASQ,cAAT,OAAwC;MAAA,IAAhB;QAAEC,IAAF;QAAQC;MAAR,CAAgB;MACtCH,WAAW,CAAEI,SAAD,IAAe,CACzB,GAAGA,SADsB,EAEzB;QAAEC,EAAE,EAAEC,IAAI,CAACC,MAAL,EAAN;QAAqBL,IAArB;QAA2BC;MAA3B,CAFyB,CAAhB,CAAX;IAID;;IAEDR,iBAAiB,CAACa,EAAlB,CAAqB,UAArB,EAAiCP,cAAjC;IAEA,OAAO,MAAM;MACXN,iBAAiB,CAACc,cAAlB,CAAiC,UAAjC,EAA6CR,cAA7C;IACD,CAFD;EAGD,CAbQ,EAaN,EAbM,CAAT;;EAeA,SAASS,mBAAT,CAA6BL,EAA7B,EAAiC;IAC/BM,OAAO,CAACC,GAAR,CAAY,gBAAZ;IACAD,OAAO,CAACC,GAAR,CAAY;MAAEP;IAAF,CAAZ;EACD;;EAED,oBACE,QAAC,SAAD;IAAA,UACGN,QAAQ,CAACc,GAAT,CAAcC,OAAD,iBACZ,QAAC,YAAD;MAEE,IAAI,EAAEA,OAAO,CAACZ,IAFhB;MAGE,IAAI,EAAEY,OAAO,CAACX,IAHhB;MAIE,eAAe,EAAEO;IAJnB,GACOI,OAAO,CAACT,EADf;MAAA;MAAA;MAAA;IAAA,QADD;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAYD;;GAnCuBP,c;;KAAAA,c"},"metadata":{},"sourceType":"module"}