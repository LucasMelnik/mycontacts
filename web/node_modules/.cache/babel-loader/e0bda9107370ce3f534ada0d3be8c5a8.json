{"ast":null,"code":"var _jsxFileName = \"/home/melnik/dev/jstack/mycontacts/web/src/components/Toast/ToastContainer/index.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport ToastMessage from '../ToastMessage';\nimport { Container } from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ToastContainer() {\n  _s();\n\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    document.addEventListener('addtoast', event => {\n      const {\n        type,\n        text\n      } = event.detail;\n      let lucar;\n      setMessages(prevState => [...prevState, {\n        id: Math.random(),\n        type,\n        text\n      }]);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: messages.map(message => /*#__PURE__*/_jsxDEV(ToastMessage, {\n      type: message.type,\n      text: message.text\n    }, message.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ToastContainer, \"RyA59LRbn9goj/9N7rELX+NWNVI=\");\n\n_c = ToastContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToastContainer\");","map":{"version":3,"names":["useEffect","useState","ToastMessage","Container","ToastContainer","messages","setMessages","document","addEventListener","event","type","text","detail","lucar","prevState","id","Math","random","map","message"],"sources":["/home/melnik/dev/jstack/mycontacts/web/src/components/Toast/ToastContainer/index.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport ToastMessage from '../ToastMessage';\nimport { Container } from './styles';\n\nexport default function ToastContainer() {\n  const [messages, setMessages] = useState([]);\n\n  useEffect(() => {\n    document.addEventListener('addtoast', (event) => {\n      const { type, text } = event.detail;\n\n      let lucar;\n\n      setMessages((prevState) => [\n        ...prevState,\n        { id: Math.random(), type, text },\n      ]);\n    });\n  }, []);\n\n  return (\n    <Container>\n      {messages.map((message) => (\n        <ToastMessage\n          key={message.id}\n          type={message.type}\n          text={message.text}\n        />\n      ))}\n    </Container>\n  );\n}\n"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,SAASC,SAAT,QAA0B,UAA1B;;AAEA,eAAe,SAASC,cAAT,GAA0B;EAAA;;EACvC,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;EAEAD,SAAS,CAAC,MAAM;IACdO,QAAQ,CAACC,gBAAT,CAA0B,UAA1B,EAAuCC,KAAD,IAAW;MAC/C,MAAM;QAAEC,IAAF;QAAQC;MAAR,IAAiBF,KAAK,CAACG,MAA7B;MAEA,IAAIC,KAAJ;MAEAP,WAAW,CAAEQ,SAAD,IAAe,CACzB,GAAGA,SADsB,EAEzB;QAAEC,EAAE,EAAEC,IAAI,CAACC,MAAL,EAAN;QAAqBP,IAArB;QAA2BC;MAA3B,CAFyB,CAAhB,CAAX;IAID,CATD;EAUD,CAXQ,EAWN,EAXM,CAAT;EAaA,oBACE,QAAC,SAAD;IAAA,UACGN,QAAQ,CAACa,GAAT,CAAcC,OAAD,iBACZ,QAAC,YAAD;MAEE,IAAI,EAAEA,OAAO,CAACT,IAFhB;MAGE,IAAI,EAAES,OAAO,CAACR;IAHhB,GACOQ,OAAO,CAACJ,EADf;MAAA;MAAA;MAAA;IAAA,QADD;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAWD;;GA3BuBX,c;;KAAAA,c"},"metadata":{},"sourceType":"module"}