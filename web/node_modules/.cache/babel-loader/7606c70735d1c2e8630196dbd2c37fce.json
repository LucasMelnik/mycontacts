{"ast":null,"code":"var _jsxFileName = \"/home/melnik/dev/jstack/mycontacts/web/src/components/ContactForm/index.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { useState, useEffect, forwardRef, useImperativeHandle } from 'react';\nimport isEmailValid from '../../utils/isEmailValid';\nimport formatPhone from '../../utils/formatPhone';\nimport useErrors from '../../hooks/useErrors';\nimport CategoriesService from '../../services/CategoriesService';\nimport { Form, ButtonContainer } from './styles';\nimport FormGroup from '../FormGroup';\nimport Input from '../Input';\nimport Select from '../Select';\nimport Button from '../Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContactForm = /*#__PURE__*/_s( /*#__PURE__*/forwardRef(_c = _s((_ref, ref) => {\n  _s();\n\n  let {\n    buttonLabel,\n    onSubmit\n  } = _ref;\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [phone, setPhone] = useState('');\n  const [categoryId, setCategoryId] = useState('');\n  const [categories, setCategories] = useState([]);\n  const [isLoadingCategories, setIsLoadingCategories] = useState(true);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const {\n    errors,\n    setError,\n    removeError,\n    getErrorMessageByFieldName\n  } = useErrors();\n  const isFormValid = name && errors.length === 0;\n  useImperativeHandle(ref, () => ({\n    setFieldsValue: contact => {\n      var _contact$name, _contact$email, _contact$phone, _contact$category_id;\n\n      setName((_contact$name = contact.name) !== null && _contact$name !== void 0 ? _contact$name : '');\n      setEmail((_contact$email = contact.email) !== null && _contact$email !== void 0 ? _contact$email : '');\n      setPhone(formatPhone((_contact$phone = contact.phone) !== null && _contact$phone !== void 0 ? _contact$phone : ''));\n      setCategoryId((_contact$category_id = contact.category_id) !== null && _contact$category_id !== void 0 ? _contact$category_id : '');\n    }\n  }), []);\n  useEffect(() => {\n    async function loadCategories() {\n      try {\n        const categoriesList = await CategoriesService.listCategories();\n        setCategories(categoriesList);\n      } catch {} finally {\n        setIsLoadingCategories(false);\n      }\n    }\n\n    loadCategories();\n  }, []);\n\n  function handleNameChange(event) {\n    setName(event.target.value);\n\n    if (!event.target.value) {\n      setError({\n        field: 'name',\n        message: 'Nome é obrigatório!'\n      });\n    } else {\n      removeError('name');\n    }\n  }\n\n  function handleEmailChange(event) {\n    setEmail(event.target.value);\n\n    if (event.target.value && !isEmailValid(event.target.value)) {\n      setError({\n        field: 'email',\n        message: 'E-mail inválido'\n      });\n    } else {\n      removeError('email');\n    }\n  }\n\n  function handlePhoneChange(event) {\n    setPhone(formatPhone(event.target.value));\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    setIsSubmitting(true);\n    await onSubmit({\n      name,\n      email,\n      phone,\n      categoryId\n    });\n    setIsSubmitting(false);\n    setName('');\n    setEmail('');\n    setPhone('');\n    setCategoryId('');\n  }\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit,\n    noValidate: true,\n    children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n      error: getErrorMessageByFieldName('name'),\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        error: getErrorMessageByFieldName('name'),\n        placeholder: \"Nome*\",\n        value: name,\n        onChange: handleNameChange,\n        disabled: isSubmitting\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n      error: getErrorMessageByFieldName('email'),\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        type: \"email\",\n        error: getErrorMessageByFieldName('email'),\n        placeholder: \"E-mail\",\n        value: email,\n        onChange: handleEmailChange,\n        disabled: isSubmitting\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Telefone\",\n        value: phone,\n        onChange: handlePhoneChange,\n        maxLength: \"15\",\n        disabled: isSubmitting\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n      isLoading: isLoadingCategories,\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        value: categoryId,\n        onChange: event => setCategoryId(event.target.value),\n        disabled: isLoadingCategories || isSubmitting,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Sem categoria\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: category.id,\n          children: category.name\n        }, category.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonContainer, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        disabled: !isFormValid,\n        isLoading: isSubmitting,\n        children: buttonLabel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}, \"34HvTAhokWbTPLoqbShXk72k+50=\", false, function () {\n  return [useErrors];\n})), \"34HvTAhokWbTPLoqbShXk72k+50=\", false, function () {\n  return [useErrors];\n});\n\n_c2 = ContactForm;\nContactForm.propTypes = {\n  buttonLabel: PropTypes.string.isRequired,\n  onSubmit: PropTypes.func.isRequired\n};\nexport default ContactForm;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ContactForm$forwardRef\");\n$RefreshReg$(_c2, \"ContactForm\");","map":{"version":3,"names":["PropTypes","useState","useEffect","forwardRef","useImperativeHandle","isEmailValid","formatPhone","useErrors","CategoriesService","Form","ButtonContainer","FormGroup","Input","Select","Button","ContactForm","ref","buttonLabel","onSubmit","name","setName","email","setEmail","phone","setPhone","categoryId","setCategoryId","categories","setCategories","isLoadingCategories","setIsLoadingCategories","isSubmitting","setIsSubmitting","errors","setError","removeError","getErrorMessageByFieldName","isFormValid","length","setFieldsValue","contact","category_id","loadCategories","categoriesList","listCategories","handleNameChange","event","target","value","field","message","handleEmailChange","handlePhoneChange","handleSubmit","preventDefault","map","category","id","propTypes","string","isRequired","func"],"sources":["/home/melnik/dev/jstack/mycontacts/web/src/components/ContactForm/index.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport {\n  useState, useEffect, forwardRef, useImperativeHandle,\n} from 'react';\n\nimport isEmailValid from '../../utils/isEmailValid';\nimport formatPhone from '../../utils/formatPhone';\nimport useErrors from '../../hooks/useErrors';\nimport CategoriesService from '../../services/CategoriesService';\n\nimport { Form, ButtonContainer } from './styles';\n\nimport FormGroup from '../FormGroup';\nimport Input from '../Input';\nimport Select from '../Select';\nimport Button from '../Button';\n\nconst ContactForm = forwardRef(({ buttonLabel, onSubmit }, ref) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [phone, setPhone] = useState('');\n  const [categoryId, setCategoryId] = useState('');\n  const [categories, setCategories] = useState([]);\n  const [isLoadingCategories, setIsLoadingCategories] = useState(true);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const {\n    errors, setError, removeError, getErrorMessageByFieldName,\n  } = useErrors();\n\n  const isFormValid = (name && errors.length === 0);\n\n  useImperativeHandle(ref, () => ({\n    setFieldsValue: (contact) => {\n      setName(contact.name ?? '');\n      setEmail(contact.email ?? '');\n      setPhone(formatPhone(contact.phone ?? ''));\n      setCategoryId(contact.category_id ?? '');\n    },\n  }), []);\n\n  useEffect(() => {\n    async function loadCategories() {\n      try {\n        const categoriesList = await CategoriesService.listCategories();\n\n        setCategories(categoriesList);\n      } catch {} finally {\n        setIsLoadingCategories(false);\n      }\n    }\n\n    loadCategories();\n  }, []);\n\n  function handleNameChange(event) {\n    setName(event.target.value);\n\n    if (!event.target.value) {\n      setError({ field: 'name', message: 'Nome é obrigatório!' });\n    } else {\n      removeError('name');\n    }\n  }\n\n  function handleEmailChange(event) {\n    setEmail(event.target.value);\n\n    if (event.target.value && !isEmailValid(event.target.value)) {\n      setError({ field: 'email', message: 'E-mail inválido' });\n    } else {\n      removeError('email');\n    }\n  }\n\n  function handlePhoneChange(event) {\n    setPhone(formatPhone(event.target.value));\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n\n    setIsSubmitting(true);\n\n    await onSubmit({\n      name, email, phone, categoryId,\n    });\n\n    setIsSubmitting(false);\n    setName('');\n    setEmail('');\n    setPhone('');\n    setCategoryId('');\n  }\n\n  return (\n    <Form onSubmit={handleSubmit} noValidate>\n      <FormGroup error={getErrorMessageByFieldName('name')}>\n        <Input\n          error={getErrorMessageByFieldName('name')}\n          placeholder=\"Nome*\"\n          value={name}\n          onChange={handleNameChange}\n          disabled={isSubmitting}\n        />\n      </FormGroup>\n\n      <FormGroup error={getErrorMessageByFieldName('email')}>\n        <Input\n          type=\"email\"\n          error={getErrorMessageByFieldName('email')}\n          placeholder=\"E-mail\"\n          value={email}\n          onChange={handleEmailChange}\n          disabled={isSubmitting}\n        />\n      </FormGroup>\n\n      <FormGroup>\n        <Input\n          placeholder=\"Telefone\"\n          value={phone}\n          onChange={handlePhoneChange}\n          maxLength=\"15\"\n          disabled={isSubmitting}\n        />\n      </FormGroup>\n\n      <FormGroup isLoading={isLoadingCategories}>\n        <Select\n          value={categoryId}\n          onChange={(event) => setCategoryId(event.target.value)}\n          disabled={isLoadingCategories || isSubmitting}\n        >\n          <option value=\"\">Sem categoria</option>\n\n          {categories.map((category) => (\n            <option key={category.id} value={category.id}>\n              {category.name}\n            </option>\n\n          ))}\n        </Select>\n      </FormGroup>\n\n      <ButtonContainer>\n        <Button\n          type=\"submit\"\n          disabled={!isFormValid}\n          isLoading={isSubmitting}\n        >\n          {buttonLabel}\n        </Button>\n      </ButtonContainer>\n    </Form>\n  );\n});\n\nContactForm.propTypes = {\n  buttonLabel: PropTypes.string.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}