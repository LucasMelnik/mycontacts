{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState, useCallback, useTransition, useMemo } from 'react';\nimport ContactsService from '../../services/ContactsService';\nimport toast from '../../utils/toast';\nexport default function useHome() {\n  _s();\n  const [contacts, setContacts] = useState([]);\n  const [orderBy, setOrderBy] = useState('asc');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [isLoading, setIsLoading] = useState(true);\n  const [hasError, setHasError] = useState(false);\n  const [isDeleteModalVisible, setIsDeleteModalVisible] = useState(false);\n  const [contactBeingDeleted, setContactBeingDeleted] = useState(null);\n  const [isLoadingDelete, setIsLoadingDelete] = useState(false);\n  const [isPending, startTransition] = useTransition();\n  const filteredContacts = useMemo(() => contacts.filter(contact => contact.name.toLowerCase().includes(searchTerm.toLowerCase())), [contacts, searchTerm]);\n  const loadContacts = useCallback(async () => {\n    try {\n      setIsLoading(true);\n      const contactsList = await ContactsService.listContacts(orderBy);\n      setHasError(false);\n      setContacts(contactsList);\n    } catch {\n      setHasError(true);\n      setContacts([]);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [orderBy]);\n  useEffect(() => {\n    loadContacts();\n  }, [loadContacts]);\n  const handleToggleOrderBy = useCallback(() => {\n    setOrderBy(prevState => prevState === 'asc' ? 'desc' : 'asc');\n  });\n  function handleChengeSearchTerm(event) {\n    const {\n      value\n    } = event.target;\n    setSearchTerm(value);\n    startTransition(() => {});\n  }\n  function handleTryAgain() {\n    loadContacts();\n  }\n  const handleDeleteContact = useCallback(contact => {\n    setContactBeingDeleted(contact);\n    setIsDeleteModalVisible(true);\n  }, []);\n  function handleCloeseDeleteModal() {\n    setIsDeleteModalVisible(false);\n  }\n  async function handleConfirmDeleteFunciton() {\n    try {\n      setIsLoadingDelete(true);\n      await ContactsService.deleteContact(contactBeingDeleted.id);\n      setContacts(prevState => prevState.filter(contact => contact.id !== contactBeingDeleted.id));\n      handleCloeseDeleteModal();\n      toast({\n        type: 'success',\n        text: 'Contato deletado com sucesso!'\n      });\n    } catch {\n      toast({\n        type: 'danger',\n        text: 'Ocorreu um erro ao deletar o contato!'\n      });\n    } finally {\n      setIsLoadingDelete(false);\n    }\n  }\n  return {\n    isLoading,\n    isLoadingDelete,\n    isDeleteModalVisible,\n    contactBeingDeleted,\n    handleCloeseDeleteModal,\n    handleConfirmDeleteFunciton,\n    contacts,\n    searchTerm,\n    handleChengeSearchTerm,\n    hasError,\n    handleTryAgain,\n    filteredContacts,\n    orderBy,\n    handleToggleOrderBy,\n    handleDeleteContact,\n    isPending\n  };\n}\n_s(useHome, \"KdghcnMKvfkhzevg1oUp+gi5j/8=\", false, function () {\n  return [useTransition];\n});","map":{"version":3,"names":["useEffect","useState","useCallback","useTransition","useMemo","ContactsService","toast","useHome","_s","contacts","setContacts","orderBy","setOrderBy","searchTerm","setSearchTerm","isLoading","setIsLoading","hasError","setHasError","isDeleteModalVisible","setIsDeleteModalVisible","contactBeingDeleted","setContactBeingDeleted","isLoadingDelete","setIsLoadingDelete","isPending","startTransition","filteredContacts","filter","contact","name","toLowerCase","includes","loadContacts","contactsList","listContacts","handleToggleOrderBy","prevState","handleChengeSearchTerm","event","value","target","handleTryAgain","handleDeleteContact","handleCloeseDeleteModal","handleConfirmDeleteFunciton","deleteContact","id","type","text"],"sources":["/home/melnik/dev/jstack/mycontacts/web/src/pages/Home/useHome.js"],"sourcesContent":["import {\n  useEffect, useState, useCallback, useTransition, useMemo,\n} from 'react';\n\nimport ContactsService from '../../services/ContactsService';\n\nimport toast from '../../utils/toast';\n\nexport default function useHome() {\n  const [contacts, setContacts] = useState([]);\n  const [orderBy, setOrderBy] = useState('asc');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [isLoading, setIsLoading] = useState(true);\n  const [hasError, setHasError] = useState(false);\n  const [isDeleteModalVisible, setIsDeleteModalVisible] = useState(false);\n  const [contactBeingDeleted, setContactBeingDeleted] = useState(null);\n  const [isLoadingDelete, setIsLoadingDelete] = useState(false);\n\n  const [isPending, startTransition] = useTransition();\n\n  const filteredContacts = useMemo(() => contacts.filter((contact) => (\n    contact.name.toLowerCase().includes(searchTerm.toLowerCase())\n  )), [contacts, searchTerm]);\n\n  const loadContacts = useCallback(async () => {\n    try {\n      setIsLoading(true);\n\n      const contactsList = await ContactsService.listContacts(orderBy);\n\n      setHasError(false);\n      setContacts(contactsList);\n    } catch {\n      setHasError(true);\n      setContacts([]);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [orderBy]);\n\n  useEffect(() => {\n    loadContacts();\n  }, [loadContacts]);\n\n  const handleToggleOrderBy = useCallback(() => {\n    setOrderBy(\n      (prevState) => (prevState === 'asc' ? 'desc' : 'asc'),\n    );\n  });\n\n  function handleChengeSearchTerm(event) {\n    const { value } = event.target;\n\n    setSearchTerm(value);\n\n    startTransition(() => {\n\n    });\n  }\n\n  function handleTryAgain() {\n    loadContacts();\n  }\n\n  const handleDeleteContact = useCallback((contact) => {\n    setContactBeingDeleted(contact);\n    setIsDeleteModalVisible(true);\n  }, []);\n\n  function handleCloeseDeleteModal() {\n    setIsDeleteModalVisible(false);\n  }\n\n  async function handleConfirmDeleteFunciton() {\n    try {\n      setIsLoadingDelete(true);\n\n      await ContactsService.deleteContact(contactBeingDeleted.id);\n\n      setContacts((prevState) => prevState.filter(\n        (contact) => contact.id !== contactBeingDeleted.id,\n      ));\n\n      handleCloeseDeleteModal();\n\n      toast({\n        type: 'success',\n        text: 'Contato deletado com sucesso!',\n      });\n    } catch {\n      toast({\n        type: 'danger',\n        text: 'Ocorreu um erro ao deletar o contato!',\n      });\n    } finally {\n      setIsLoadingDelete(false);\n    }\n  }\n\n  return {\n    isLoading,\n    isLoadingDelete,\n    isDeleteModalVisible,\n    contactBeingDeleted,\n    handleCloeseDeleteModal,\n    handleConfirmDeleteFunciton,\n    contacts,\n    searchTerm,\n    handleChengeSearchTerm,\n    hasError,\n    handleTryAgain,\n    filteredContacts,\n    orderBy,\n    handleToggleOrderBy,\n    handleDeleteContact,\n    isPending,\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}