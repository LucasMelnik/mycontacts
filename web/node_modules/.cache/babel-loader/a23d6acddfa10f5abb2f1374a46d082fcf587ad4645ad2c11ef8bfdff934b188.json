{"ast":null,"code":"var _jsxFileName = \"/home/melnik/dev/jstack/mycontacts/web/src/components/Modal/index.js\",\n  _s = $RefreshSig$();\nimport PropTypes from 'prop-types';\nimport { Overlay, Container, Footer } from './styles';\nimport Button from '../Button';\nimport ReactPortal from '../ReactPortal';\nimport useAnimatedUnmount from '../../hooks/useAnimatedUnmount';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Modal(_ref) {\n  _s();\n  let {\n    danger,\n    visible,\n    isLoading,\n    title,\n    children,\n    cancelLabel,\n    confirmLabel,\n    onCancel,\n    onConfirm\n  } = _ref;\n  const {\n    shouldRender,\n    animattedElementRef\n  } = useAnimatedUnmount(visible);\n  if (!shouldRender) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(ReactPortal, {\n    containerId: \"modal-root\",\n    children: [/*#__PURE__*/_jsxDEV(Overlay, {\n      isLeaving: !visible,\n      ref: animattedElementRef,\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        isLeaving: !visible,\n        danger: danger,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-body\",\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"cancel-button\",\n            onClick: onCancel,\n            disabled: isLoading,\n            children: cancelLabel\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"button\",\n            danger: danger,\n            onClick: onConfirm,\n            isLoading: isLoading,\n            children: confirmLabel\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), \",\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(Modal, \"K0ZkG8Xki697BILKfUXC1kRcXoU=\", false, function () {\n  return [useAnimatedUnmount];\n});\n_c = Modal;\nModal.propTypes = {\n  danger: PropTypes.bool,\n  visible: PropTypes.bool.isRequired,\n  isLoading: PropTypes.bool,\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n  cancelLabel: PropTypes.string,\n  confirmLabel: PropTypes.string,\n  onCancel: PropTypes.func.isRequired,\n  onConfirm: PropTypes.func.isRequired\n};\nModal.defaultProps = {\n  danger: false,\n  isLoading: true,\n  cancelLabel: 'Cancelar',\n  confirmLabel: 'Confirmar'\n};\nvar _c;\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"names":["PropTypes","Overlay","Container","Footer","Button","ReactPortal","useAnimatedUnmount","jsxDEV","_jsxDEV","Modal","_ref","_s","danger","visible","isLoading","title","children","cancelLabel","confirmLabel","onCancel","onConfirm","shouldRender","animattedElementRef","containerId","isLeaving","ref","fileName","_jsxFileName","lineNumber","columnNumber","className","type","onClick","disabled","_c","propTypes","bool","isRequired","string","node","func","defaultProps","$RefreshReg$"],"sources":["/home/melnik/dev/jstack/mycontacts/web/src/components/Modal/index.js"],"sourcesContent":["import PropTypes from 'prop-types';\n\nimport { Overlay, Container, Footer } from './styles';\n\nimport Button from '../Button';\nimport ReactPortal from '../ReactPortal';\n\nimport useAnimatedUnmount from '../../hooks/useAnimatedUnmount';\n\nexport default function Modal({\n  danger, visible, isLoading, title, children, cancelLabel, confirmLabel, onCancel, onConfirm,\n}) {\n  const { shouldRender, animattedElementRef } = useAnimatedUnmount(visible);\n\n  if (!shouldRender) {\n    return null;\n  }\n\n  return (\n    <ReactPortal containerId=\"modal-root\">\n      <Overlay isLeaving={!visible} ref={animattedElementRef}>\n        <Container isLeaving={!visible} danger={danger}>\n          <h1>{title}</h1>\n\n          <div className=\"modal-body\">\n            {children}\n          </div>\n\n          <Footer>\n            <button\n              type=\"button\"\n              className=\"cancel-button\"\n              onClick={onCancel}\n              disabled={isLoading}\n            >\n              {cancelLabel}\n            </button>\n            <Button\n              type=\"button\"\n              danger={danger}\n              onClick={onConfirm}\n              isLoading={isLoading}\n            >\n              {confirmLabel}\n            </Button>\n          </Footer>\n        </Container>\n      </Overlay>\n      ,\n    </ReactPortal>\n  );\n}\n\nModal.propTypes = {\n  danger: PropTypes.bool,\n  visible: PropTypes.bool.isRequired,\n  isLoading: PropTypes.bool,\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n  cancelLabel: PropTypes.string,\n  confirmLabel: PropTypes.string,\n  onCancel: PropTypes.func.isRequired,\n  onConfirm: PropTypes.func.isRequired,\n};\n\nModal.defaultProps = {\n  danger: false,\n  isLoading: true,\n  cancelLabel: 'Cancelar',\n  confirmLabel: 'Confirmar',\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}