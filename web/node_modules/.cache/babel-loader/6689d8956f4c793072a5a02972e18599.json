{"ast":null,"code":"var _jsxFileName = \"/home/melnik/dev/jstack/mycontacts/web/src/components/Toast/ToastContainer/index.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport ToastMessage from '../ToastMessage';\nimport { Container } from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ToastContainer() {\n  _s();\n\n  const [messages] = useState([{\n    id: Math.random(),\n    type: 'default',\n    text: 'Default text'\n  }, {\n    id: Math.random(),\n    type: 'danger',\n    text: 'danger text'\n  }, {\n    id: Math.random(),\n    type: 'success',\n    text: 'success text'\n  }]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: messages.map(message => /*#__PURE__*/_jsxDEV(ToastContainer, {\n      type: message.type,\n      text: message.text\n    }, message.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ToastContainer, \"k2sIFmlvaoixB7IZeYpDDM53X+c=\");\n\n_c = ToastContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToastContainer\");","map":{"version":3,"names":["useState","ToastMessage","Container","ToastContainer","messages","id","Math","random","type","text","map","message"],"sources":["/home/melnik/dev/jstack/mycontacts/web/src/components/Toast/ToastContainer/index.js"],"sourcesContent":["import { useState } from 'react';\nimport ToastMessage from '../ToastMessage';\nimport { Container } from './styles';\n\nexport default function ToastContainer() {\n  const [messages] = useState([\n    { id: Math.random(), type: 'default', text: 'Default text' },\n    { id: Math.random(), type: 'danger', text: 'danger text' },\n    { id: Math.random(), type: 'success', text: 'success text' },\n  ]);\n\n  return (\n    <Container>\n      {messages.map((message) => (\n        <ToastContainer\n          key={message.id}\n          type={message.type}\n          text={message.text}\n        />\n      ))}\n    </Container>\n  );\n}\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,SAASC,SAAT,QAA0B,UAA1B;;AAEA,eAAe,SAASC,cAAT,GAA0B;EAAA;;EACvC,MAAM,CAACC,QAAD,IAAaJ,QAAQ,CAAC,CAC1B;IAAEK,EAAE,EAAEC,IAAI,CAACC,MAAL,EAAN;IAAqBC,IAAI,EAAE,SAA3B;IAAsCC,IAAI,EAAE;EAA5C,CAD0B,EAE1B;IAAEJ,EAAE,EAAEC,IAAI,CAACC,MAAL,EAAN;IAAqBC,IAAI,EAAE,QAA3B;IAAqCC,IAAI,EAAE;EAA3C,CAF0B,EAG1B;IAAEJ,EAAE,EAAEC,IAAI,CAACC,MAAL,EAAN;IAAqBC,IAAI,EAAE,SAA3B;IAAsCC,IAAI,EAAE;EAA5C,CAH0B,CAAD,CAA3B;EAMA,oBACE,QAAC,SAAD;IAAA,UACGL,QAAQ,CAACM,GAAT,CAAcC,OAAD,iBACZ,QAAC,cAAD;MAEE,IAAI,EAAEA,OAAO,CAACH,IAFhB;MAGE,IAAI,EAAEG,OAAO,CAACF;IAHhB,GACOE,OAAO,CAACN,EADf;MAAA;MAAA;MAAA;IAAA,QADD;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAWD;;GAlBuBF,c;;KAAAA,c"},"metadata":{},"sourceType":"module"}