{"ast":null,"code":"var _jsxFileName = \"/home/melnik/dev/jstack/mycontacts/web/src/components/ContactForm/index.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport isEmailValid from '../../utils/isEmailValid';\nimport formatPhone from '../../utils/formatPhone';\nimport useErrors from '../../hooks/useErrors';\nimport CategoriesService from '../../services/CategoriesService';\nimport { Form, ButtonContainer } from './styles';\nimport FormGroup from '../FormGroup';\nimport Input from '../Input';\nimport Select from '../Select';\nimport Button from '../Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ContactForm(_ref) {\n  _s();\n\n  let {\n    buttonLabel,\n    onSubmit\n  } = _ref;\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [phone, setPhone] = useState('');\n  const [categoryId, setCategoryId] = useState('');\n  const [categories, setCategories] = useState([]);\n  const [isLoadingCategories, setIsLoadingCategories] = useState(true);\n  const {\n    errors,\n    setError,\n    removeError,\n    getErrorMessageByFieldName\n  } = useErrors();\n  const isFormValid = name && errors.length === 0;\n  useEffect(() => {\n    async function loadCategories() {\n      try {\n        const categoriesList = await CategoriesService.listCategories();\n        setCategories(categoriesList);\n      } catch {} finally {\n        setIsLoadingCategories(false);\n      }\n    }\n\n    loadCategories();\n  }, []);\n\n  function handleNameChange(event) {\n    setName(event.target.value);\n\n    if (!event.target.value) {\n      setError({\n        field: 'name',\n        message: 'Nome é obrigatório!'\n      });\n    } else {\n      removeError('name');\n    }\n  }\n\n  function handleEmailChange(event) {\n    setEmail(event.target.value);\n\n    if (event.target.value && !isEmailValid(event.target.value)) {\n      setError({\n        field: 'email',\n        message: 'E-mail inválido'\n      });\n    } else {\n      removeError('email');\n    }\n  }\n\n  function handlePhoneChange(event) {\n    setPhone(formatPhone(event.target.value));\n  }\n\n  function handleSubmit(event) {\n    console.log({\n      name,\n      email,\n      phone: phone.replace(/\\D/g, ''),\n      categoryId\n    });\n    event.preventDefault();\n    onSubmit();\n  }\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit,\n    noValidate: true,\n    children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n      error: getErrorMessageByFieldName('name'),\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        error: getErrorMessageByFieldName('name'),\n        placeholder: \"Nome*\",\n        value: name,\n        onChange: handleNameChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n      error: getErrorMessageByFieldName('email'),\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        type: \"email\",\n        error: getErrorMessageByFieldName('email'),\n        placeholder: \"E-mail\",\n        value: email,\n        onChange: handleEmailChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Telefone\",\n        value: phone,\n        onChange: handlePhoneChange,\n        maxLength: \"15\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n      isLoading: isLoadingCategories,\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        value: categoryId,\n        onChange: event => setCategoryId(event.target.value),\n        disabled: isLoadingCategories,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Sem categoria\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: category.id,\n          children: category.name\n        }, category.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonContainer, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        disabled: !isFormValid,\n        children: buttonLabel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ContactForm, \"YtaM65l4+EIeuMmZAK197qvXrfU=\", false, function () {\n  return [useErrors];\n});\n\n_c = ContactForm;\nContactForm.propTypes = {\n  buttonLabel: PropTypes.string.isRequired,\n  onSubmit: PropTypes.func.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"names":["PropTypes","useState","useEffect","isEmailValid","formatPhone","useErrors","CategoriesService","Form","ButtonContainer","FormGroup","Input","Select","Button","ContactForm","buttonLabel","onSubmit","name","setName","email","setEmail","phone","setPhone","categoryId","setCategoryId","categories","setCategories","isLoadingCategories","setIsLoadingCategories","errors","setError","removeError","getErrorMessageByFieldName","isFormValid","length","loadCategories","categoriesList","listCategories","handleNameChange","event","target","value","field","message","handleEmailChange","handlePhoneChange","handleSubmit","console","log","replace","preventDefault","map","category","id","propTypes","string","isRequired","func"],"sources":["/home/melnik/dev/jstack/mycontacts/web/src/components/ContactForm/index.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\n\nimport isEmailValid from '../../utils/isEmailValid';\nimport formatPhone from '../../utils/formatPhone';\nimport useErrors from '../../hooks/useErrors';\nimport CategoriesService from '../../services/CategoriesService';\n\nimport { Form, ButtonContainer } from './styles';\n\nimport FormGroup from '../FormGroup';\nimport Input from '../Input';\nimport Select from '../Select';\nimport Button from '../Button';\n\nexport default function ContactForm({ buttonLabel, onSubmit }) {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [phone, setPhone] = useState('');\n  const [categoryId, setCategoryId] = useState('');\n  const [categories, setCategories] = useState([]);\n  const [isLoadingCategories, setIsLoadingCategories] = useState(true);\n\n  const {\n    errors, setError, removeError, getErrorMessageByFieldName,\n  } = useErrors();\n\n  const isFormValid = (name && errors.length === 0);\n\n  useEffect(() => {\n    async function loadCategories() {\n      try {\n        const categoriesList = await CategoriesService.listCategories();\n\n        setCategories(categoriesList);\n      } catch {} finally {\n        setIsLoadingCategories(false);\n      }\n    }\n\n    loadCategories();\n  }, []);\n\n  function handleNameChange(event) {\n    setName(event.target.value);\n\n    if (!event.target.value) {\n      setError({ field: 'name', message: 'Nome é obrigatório!' });\n    } else {\n      removeError('name');\n    }\n  }\n\n  function handleEmailChange(event) {\n    setEmail(event.target.value);\n\n    if (event.target.value && !isEmailValid(event.target.value)) {\n      setError({ field: 'email', message: 'E-mail inválido' });\n    } else {\n      removeError('email');\n    }\n  }\n\n  function handlePhoneChange(event) {\n    setPhone(formatPhone(event.target.value));\n  }\n\n  function handleSubmit(event) {\n    console.log({\n      name, email, phone: phone.replace(/\\D/g, ''), categoryId,\n    });\n\n    event.preventDefault();\n\n    onSubmit();\n  }\n\n  return (\n    <Form onSubmit={handleSubmit} noValidate>\n      <FormGroup error={getErrorMessageByFieldName('name')}>\n        <Input\n          error={getErrorMessageByFieldName('name')}\n          placeholder=\"Nome*\"\n          value={name}\n          onChange={handleNameChange}\n        />\n      </FormGroup>\n\n      <FormGroup error={getErrorMessageByFieldName('email')}>\n        <Input\n          type=\"email\"\n          error={getErrorMessageByFieldName('email')}\n          placeholder=\"E-mail\"\n          value={email}\n          onChange={handleEmailChange}\n        />\n      </FormGroup>\n\n      <FormGroup>\n        <Input\n          placeholder=\"Telefone\"\n          value={phone}\n          onChange={handlePhoneChange}\n          maxLength=\"15\"\n        />\n      </FormGroup>\n\n      <FormGroup isLoading={isLoadingCategories}>\n        <Select\n          value={categoryId}\n          onChange={(event) => setCategoryId(event.target.value)}\n          disabled={isLoadingCategories}\n        >\n          <option value=\"\">Sem categoria</option>\n\n          {categories.map((category) => (\n            <option key={category.id} value={category.id}>\n              {category.name}\n            </option>\n\n          ))}\n        </Select>\n      </FormGroup>\n\n      <ButtonContainer>\n        <Button type=\"submit\" disabled={!isFormValid}>\n          {buttonLabel}\n        </Button>\n      </ButtonContainer>\n    </Form>\n  );\n}\n\nContactForm.propTypes = {\n  buttonLabel: PropTypes.string.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n};\n"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;AAEA,SAASC,IAAT,EAAeC,eAAf,QAAsC,UAAtC;AAEA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,MAAP,MAAmB,WAAnB;;AAEA,eAAe,SAASC,WAAT,OAAgD;EAAA;;EAAA,IAA3B;IAAEC,WAAF;IAAeC;EAAf,CAA2B;EAC7D,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBhB,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACiB,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACmB,KAAD,EAAQC,QAAR,IAAoBpB,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACqB,UAAD,EAAaC,aAAb,IAA8BtB,QAAQ,CAAC,EAAD,CAA5C;EACA,MAAM,CAACuB,UAAD,EAAaC,aAAb,IAA8BxB,QAAQ,CAAC,EAAD,CAA5C;EACA,MAAM,CAACyB,mBAAD,EAAsBC,sBAAtB,IAAgD1B,QAAQ,CAAC,IAAD,CAA9D;EAEA,MAAM;IACJ2B,MADI;IACIC,QADJ;IACcC,WADd;IAC2BC;EAD3B,IAEF1B,SAAS,EAFb;EAIA,MAAM2B,WAAW,GAAIhB,IAAI,IAAIY,MAAM,CAACK,MAAP,KAAkB,CAA/C;EAEA/B,SAAS,CAAC,MAAM;IACd,eAAegC,cAAf,GAAgC;MAC9B,IAAI;QACF,MAAMC,cAAc,GAAG,MAAM7B,iBAAiB,CAAC8B,cAAlB,EAA7B;QAEAX,aAAa,CAACU,cAAD,CAAb;MACD,CAJD,CAIE,MAAM,CAAE,CAJV,SAImB;QACjBR,sBAAsB,CAAC,KAAD,CAAtB;MACD;IACF;;IAEDO,cAAc;EACf,CAZQ,EAYN,EAZM,CAAT;;EAcA,SAASG,gBAAT,CAA0BC,KAA1B,EAAiC;IAC/BrB,OAAO,CAACqB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP;;IAEA,IAAI,CAACF,KAAK,CAACC,MAAN,CAAaC,KAAlB,EAAyB;MACvBX,QAAQ,CAAC;QAAEY,KAAK,EAAE,MAAT;QAAiBC,OAAO,EAAE;MAA1B,CAAD,CAAR;IACD,CAFD,MAEO;MACLZ,WAAW,CAAC,MAAD,CAAX;IACD;EACF;;EAED,SAASa,iBAAT,CAA2BL,KAA3B,EAAkC;IAChCnB,QAAQ,CAACmB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAR;;IAEA,IAAIF,KAAK,CAACC,MAAN,CAAaC,KAAb,IAAsB,CAACrC,YAAY,CAACmC,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAvC,EAA6D;MAC3DX,QAAQ,CAAC;QAAEY,KAAK,EAAE,OAAT;QAAkBC,OAAO,EAAE;MAA3B,CAAD,CAAR;IACD,CAFD,MAEO;MACLZ,WAAW,CAAC,OAAD,CAAX;IACD;EACF;;EAED,SAASc,iBAAT,CAA2BN,KAA3B,EAAkC;IAChCjB,QAAQ,CAACjB,WAAW,CAACkC,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAZ,CAAR;EACD;;EAED,SAASK,YAAT,CAAsBP,KAAtB,EAA6B;IAC3BQ,OAAO,CAACC,GAAR,CAAY;MACV/B,IADU;MACJE,KADI;MACGE,KAAK,EAAEA,KAAK,CAAC4B,OAAN,CAAc,KAAd,EAAqB,EAArB,CADV;MACoC1B;IADpC,CAAZ;IAIAgB,KAAK,CAACW,cAAN;IAEAlC,QAAQ;EACT;;EAED,oBACE,QAAC,IAAD;IAAM,QAAQ,EAAE8B,YAAhB;IAA8B,UAAU,MAAxC;IAAA,wBACE,QAAC,SAAD;MAAW,KAAK,EAAEd,0BAA0B,CAAC,MAAD,CAA5C;MAAA,uBACE,QAAC,KAAD;QACE,KAAK,EAAEA,0BAA0B,CAAC,MAAD,CADnC;QAEE,WAAW,EAAC,OAFd;QAGE,KAAK,EAAEf,IAHT;QAIE,QAAQ,EAAEqB;MAJZ;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAUE,QAAC,SAAD;MAAW,KAAK,EAAEN,0BAA0B,CAAC,OAAD,CAA5C;MAAA,uBACE,QAAC,KAAD;QACE,IAAI,EAAC,OADP;QAEE,KAAK,EAAEA,0BAA0B,CAAC,OAAD,CAFnC;QAGE,WAAW,EAAC,QAHd;QAIE,KAAK,EAAEb,KAJT;QAKE,QAAQ,EAAEyB;MALZ;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAVF,eAoBE,QAAC,SAAD;MAAA,uBACE,QAAC,KAAD;QACE,WAAW,EAAC,UADd;QAEE,KAAK,EAAEvB,KAFT;QAGE,QAAQ,EAAEwB,iBAHZ;QAIE,SAAS,EAAC;MAJZ;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QApBF,eA6BE,QAAC,SAAD;MAAW,SAAS,EAAElB,mBAAtB;MAAA,uBACE,QAAC,MAAD;QACE,KAAK,EAAEJ,UADT;QAEE,QAAQ,EAAGgB,KAAD,IAAWf,aAAa,CAACe,KAAK,CAACC,MAAN,CAAaC,KAAd,CAFpC;QAGE,QAAQ,EAAEd,mBAHZ;QAAA,wBAKE;UAAQ,KAAK,EAAC,EAAd;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QALF,EAOGF,UAAU,CAAC0B,GAAX,CAAgBC,QAAD,iBACd;UAA0B,KAAK,EAAEA,QAAQ,CAACC,EAA1C;UAAA,UACGD,QAAQ,CAACnC;QADZ,GAAamC,QAAQ,CAACC,EAAtB;UAAA;UAAA;UAAA;QAAA,QADD,CAPH;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QA7BF,eA8CE,QAAC,eAAD;MAAA,uBACE,QAAC,MAAD;QAAQ,IAAI,EAAC,QAAb;QAAsB,QAAQ,EAAE,CAACpB,WAAjC;QAAA,UACGlB;MADH;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QA9CF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAsDD;;GApHuBD,W;UAUlBR,S;;;KAVkBQ,W;AAsHxBA,WAAW,CAACwC,SAAZ,GAAwB;EACtBvC,WAAW,EAAEd,SAAS,CAACsD,MAAV,CAAiBC,UADR;EAEtBxC,QAAQ,EAAEf,SAAS,CAACwD,IAAV,CAAeD;AAFH,CAAxB"},"metadata":{},"sourceType":"module"}