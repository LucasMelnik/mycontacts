{"ast":null,"code":"import delay from '../../utils/ delay';\n\nclass HttpClient {\n  constructor(baseURL) {\n    this.baseURL = baseURL;\n  }\n\n  async get(path) {\n    await delay(500);\n    const response = await fetch(`${this.baseURL + path}`);\n    const body = await response.json();\n\n    if (response.ok) {\n      return body;\n    }\n\n    console.log(body);\n    throw new Error(`${response.status} - ${response.statusText}`);\n  }\n\n}\n\nexport default HttpClient;","map":{"version":3,"names":["delay","HttpClient","constructor","baseURL","get","path","response","fetch","body","json","ok","console","log","Error","status","statusText"],"sources":["/home/melnik/dev/jstack/mycontacts/web/src/services/utils/HttpClient.js"],"sourcesContent":["import delay from '../../utils/ delay';\n\nclass HttpClient {\n  constructor(baseURL) {\n    this.baseURL = baseURL;\n  }\n\n  async get(path) {\n    await delay(500);\n\n    const response = await fetch(`${this.baseURL + path}`);\n\n    const body = await response.json();\n\n    if (response.ok) {\n      return body;\n    }\n\n    console.log(body);\n\n    throw new Error(`${response.status} - ${response.statusText}`);\n  }\n}\n\nexport default HttpClient;\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,oBAAlB;;AAEA,MAAMC,UAAN,CAAiB;EACfC,WAAW,CAACC,OAAD,EAAU;IACnB,KAAKA,OAAL,GAAeA,OAAf;EACD;;EAEQ,MAAHC,GAAG,CAACC,IAAD,EAAO;IACd,MAAML,KAAK,CAAC,GAAD,CAAX;IAEA,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAE,KAAKJ,OAAL,GAAeE,IAAK,EAAxB,CAA5B;IAEA,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;;IAEA,IAAIH,QAAQ,CAACI,EAAb,EAAiB;MACf,OAAOF,IAAP;IACD;;IAEDG,OAAO,CAACC,GAAR,CAAYJ,IAAZ;IAEA,MAAM,IAAIK,KAAJ,CAAW,GAAEP,QAAQ,CAACQ,MAAO,MAAKR,QAAQ,CAACS,UAAW,EAAtD,CAAN;EACD;;AAnBc;;AAsBjB,eAAed,UAAf"},"metadata":{},"sourceType":"module"}