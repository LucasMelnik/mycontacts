{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback, useState } from 'react';\nimport useIsMounted from './useIsMounted';\nexport default function useSafeAsyncState(initialState) {\n  _s();\n\n  const [state, setState] = useState(initialState);\n  const isMounted = useIsMounted();\n  const setSafeAsyncState = useCallback(data => {\n    if (isMounted()) {\n      setState(data);\n    }\n  }, []);\n  return [state, setSafeAsyncState];\n}\n\n_s(useSafeAsyncState, \"GpOtvNBgraj0PIHeTce+FVF0HCs=\", false, function () {\n  return [useIsMounted];\n});","map":{"version":3,"names":["useCallback","useState","useIsMounted","useSafeAsyncState","initialState","state","setState","isMounted","setSafeAsyncState","data"],"sources":["/home/melnik/dev/jstack/mycontacts/web/src/hooks/useSafeAsyncState.js"],"sourcesContent":["import {\n  useCallback, useState,\n} from 'react';\nimport useIsMounted from './useIsMounted';\n\nexport default function useSafeAsyncState(initialState) {\n  const [state, setState] = useState(initialState);\n\n  const isMounted = useIsMounted();\n\n  const setSafeAsyncState = useCallback((data) => {\n    if (isMounted()) {\n      setState(data);\n    }\n  }, []);\n\n  return [state, setSafeAsyncState];\n}\n"],"mappings":";;AAAA,SACEA,WADF,EACeC,QADf,QAEO,OAFP;AAGA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,eAAe,SAASC,iBAAT,CAA2BC,YAA3B,EAAyC;EAAA;;EACtD,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAACG,YAAD,CAAlC;EAEA,MAAMG,SAAS,GAAGL,YAAY,EAA9B;EAEA,MAAMM,iBAAiB,GAAGR,WAAW,CAAES,IAAD,IAAU;IAC9C,IAAIF,SAAS,EAAb,EAAiB;MACfD,QAAQ,CAACG,IAAD,CAAR;IACD;EACF,CAJoC,EAIlC,EAJkC,CAArC;EAMA,OAAO,CAACJ,KAAD,EAAQG,iBAAR,CAAP;AACD;;GAZuBL,iB;UAGJD,Y"},"metadata":{},"sourceType":"module"}