{"ast":null,"code":"export default class EventManager {\n  constructor() {\n    this.listeners = {};\n  }\n\n  on(event, listener) {\n    if (!this.listeners[event]) {\n      this.listeners[event] = [];\n    }\n\n    this.listeners[event].push(listener);\n  }\n\n  emit(event, payload) {\n    if (!this.listeners[event]) {\n      return;\n    }\n\n    this.listeners[event].forEach(listener => {\n      listener(payload);\n    });\n  }\n\n  removeListener(event, listenerToRemove) {\n    const listeners = this.listeners[event];\n\n    if (!listeners) {\n      return;\n    }\n\n    const filteredListeners = listeners.filter(listener => listener !== listenerToRemove);\n    this.listeners[event] = filteredListeners;\n  }\n\n}\nconst toastManager = new EventManager();\ntoastManager.on('addtoast', payload => {\n  console.log(payload);\n});\ntoastManager.emit('addtoast', {\n  type: 'danger',\n  text: 'Texto'\n});\nconsole.log(toastManager);","map":{"version":3,"names":["EventManager","constructor","listeners","on","event","listener","push","emit","payload","forEach","removeListener","listenerToRemove","filteredListeners","filter","toastManager","console","log","type","text"],"sources":["/home/melnik/dev/jstack/mycontacts/web/src/lib/EventManager.js"],"sourcesContent":["export default class EventManager {\n  constructor() {\n    this.listeners = {};\n  }\n\n  on(event, listener) {\n    if (!this.listeners[event]) {\n      this.listeners[event] = [];\n    }\n\n    this.listeners[event].push(listener);\n  }\n\n  emit(event, payload) {\n    if (!this.listeners[event]) {\n      return;\n    }\n\n    this.listeners[event].forEach((listener) => {\n      listener(payload);\n    });\n  }\n\n  removeListener(event, listenerToRemove) {\n    const listeners = this.listeners[event];\n\n    if (!listeners) {\n      return;\n    }\n\n    const filteredListeners = listeners.filter(\n      (listener) => listener !== listenerToRemove,\n    );\n\n    this.listeners[event] = filteredListeners;\n  }\n}\n\nconst toastManager = new EventManager();\n\ntoastManager.on('addtoast', (payload) => { console.log(payload); });\n\ntoastManager.emit('addtoast', { type: 'danger', text: 'Texto' });\nconsole.log(toastManager);\n"],"mappings":"AAAA,eAAe,MAAMA,YAAN,CAAmB;EAChCC,WAAW,GAAG;IACZ,KAAKC,SAAL,GAAiB,EAAjB;EACD;;EAEDC,EAAE,CAACC,KAAD,EAAQC,QAAR,EAAkB;IAClB,IAAI,CAAC,KAAKH,SAAL,CAAeE,KAAf,CAAL,EAA4B;MAC1B,KAAKF,SAAL,CAAeE,KAAf,IAAwB,EAAxB;IACD;;IAED,KAAKF,SAAL,CAAeE,KAAf,EAAsBE,IAAtB,CAA2BD,QAA3B;EACD;;EAEDE,IAAI,CAACH,KAAD,EAAQI,OAAR,EAAiB;IACnB,IAAI,CAAC,KAAKN,SAAL,CAAeE,KAAf,CAAL,EAA4B;MAC1B;IACD;;IAED,KAAKF,SAAL,CAAeE,KAAf,EAAsBK,OAAtB,CAA+BJ,QAAD,IAAc;MAC1CA,QAAQ,CAACG,OAAD,CAAR;IACD,CAFD;EAGD;;EAEDE,cAAc,CAACN,KAAD,EAAQO,gBAAR,EAA0B;IACtC,MAAMT,SAAS,GAAG,KAAKA,SAAL,CAAeE,KAAf,CAAlB;;IAEA,IAAI,CAACF,SAAL,EAAgB;MACd;IACD;;IAED,MAAMU,iBAAiB,GAAGV,SAAS,CAACW,MAAV,CACvBR,QAAD,IAAcA,QAAQ,KAAKM,gBADH,CAA1B;IAIA,KAAKT,SAAL,CAAeE,KAAf,IAAwBQ,iBAAxB;EACD;;AAnC+B;AAsClC,MAAME,YAAY,GAAG,IAAId,YAAJ,EAArB;AAEAc,YAAY,CAACX,EAAb,CAAgB,UAAhB,EAA6BK,OAAD,IAAa;EAAEO,OAAO,CAACC,GAAR,CAAYR,OAAZ;AAAuB,CAAlE;AAEAM,YAAY,CAACP,IAAb,CAAkB,UAAlB,EAA8B;EAAEU,IAAI,EAAE,QAAR;EAAkBC,IAAI,EAAE;AAAxB,CAA9B;AACAH,OAAO,CAACC,GAAR,CAAYF,YAAZ"},"metadata":{},"sourceType":"module"}