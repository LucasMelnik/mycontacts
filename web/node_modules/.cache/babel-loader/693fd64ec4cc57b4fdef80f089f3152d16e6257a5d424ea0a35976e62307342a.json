{"ast":null,"code":"var _jsxFileName = \"/home/melnik/dev/jstack/mycontacts/web/src/pages/Home/components/ContactsList/index.js\";\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { memo } from 'react';\nimport arrow from '../../../../assets/images/icons/arrow.svg';\nimport edit from '../../../../assets/images/icons/edit.svg';\nimport trash from '../../../../assets/images/icons/trash.svg';\nimport { ListHeader, Card } from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ContactsList(_ref) {\n  let {\n    filteredContacts,\n    orderBy,\n    onToggleOrderBy,\n    onDeleteContact\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [filteredContacts.length > 0 && /*#__PURE__*/_jsxDEV(ListHeader, {\n      orderBy: orderBy,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: onToggleOrderBy,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Nome\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: arrow,\n          alt: \"Arrow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this), filteredContacts.map(contact => /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"contact-name\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: contact.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this), contact.category.name && /*#__PURE__*/_jsxDEV(\"small\", {\n            children: contact.category.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: contact.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: contact.phone\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"actions\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/edit/${contact.id}`,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: edit,\n            alt: \"edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => onDeleteContact(contact),\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: trash,\n            alt: \"edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)]\n    }, contact.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true);\n}\n_c = ContactsList;\nContactsList.propTypes = {\n  filteredContacts: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    email: PropTypes.string,\n    phone: PropTypes.string,\n    category: PropTypes.shape({\n      name: PropTypes.string\n    })\n  })).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  onToggleOrderBy: PropTypes.func.isRequired,\n  onDeleteContact: PropTypes.func.isRequired\n};\nexport default _c2 = /*#__PURE__*/memo(ContactsList);\nvar _c, _c2;\n$RefreshReg$(_c, \"ContactsList\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["Link","PropTypes","memo","arrow","edit","trash","ListHeader","Card","jsxDEV","_jsxDEV","Fragment","_Fragment","ContactsList","_ref","filteredContacts","orderBy","onToggleOrderBy","onDeleteContact","children","length","type","onClick","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","map","contact","className","name","category","email","phone","to","id","_c","propTypes","arrayOf","shape","string","isRequired","func","_c2","$RefreshReg$"],"sources":["/home/melnik/dev/jstack/mycontacts/web/src/pages/Home/components/ContactsList/index.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { memo } from 'react';\n\nimport arrow from '../../../../assets/images/icons/arrow.svg';\nimport edit from '../../../../assets/images/icons/edit.svg';\nimport trash from '../../../../assets/images/icons/trash.svg';\n\nimport { ListHeader, Card } from './styles';\n\nfunction ContactsList({\n  filteredContacts,\n  orderBy,\n  onToggleOrderBy,\n  onDeleteContact,\n}) {\n  return (\n    <>\n      {filteredContacts.length > 0 && (\n        <ListHeader orderBy={orderBy}>\n          <button type=\"button\" onClick={onToggleOrderBy}>\n            <span>Nome</span>\n            <img src={arrow} alt=\"Arrow\" />\n          </button>\n        </ListHeader>\n      )}\n\n      {filteredContacts.map((contact) => (\n        <Card key={contact.id}>\n          <div className=\"info\">\n            <div className=\"contact-name\">\n              <strong>{contact.name}</strong>\n              {contact.category.name && <small>{contact.category.name}</small>}\n            </div>\n            <span>{contact.email}</span>\n            <span>{contact.phone}</span>\n          </div>\n\n          <div className=\"actions\">\n            <Link to={`/edit/${contact.id}`}>\n              <img src={edit} alt=\"edit\" />\n            </Link>\n            <button\n              type=\"button\"\n              onClick={() => onDeleteContact(contact)}\n            >\n              <img src={trash} alt=\"edit\" />\n            </button>\n          </div>\n        </Card>\n      ))}\n    </>\n  );\n}\n\nContactsList.propTypes = {\n  filteredContacts: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    email: PropTypes.string,\n    phone: PropTypes.string,\n    category: PropTypes.shape({\n      name: PropTypes.string,\n    }),\n  })).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  onToggleOrderBy: PropTypes.func.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default memo(ContactsList);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}