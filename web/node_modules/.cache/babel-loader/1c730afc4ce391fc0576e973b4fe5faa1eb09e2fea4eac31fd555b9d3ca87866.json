{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState, useMemo, useCallback } from 'react';\nimport ContactsService from '../../services/ContactsService';\nimport toast from '../../utils/toast';\nexport default function useHome() {\n  _s();\n  const [contacts, setContacts] = useState([]);\n  const [orderBy, setOrderBy] = useState('asc');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [isLoading, setIsLoading] = useState(true);\n  const [hasError, setHasError] = useState(false);\n  const [isDeleteModalVisible, setIsDeleteModalVisible] = useState(false);\n  const [contactBeingDeleted, setContactBeingDeleted] = useState(null);\n  const [isLoadingDelete, setIsLoadingDelete] = useState(false);\n  const [filteredContacts, setFilteredContacts] = useState([]);\n\n  // const filteredContacts = useMemo(() => contacts.filter((contact) => (\n  //   contact.name.toLowerCase().includes(searchTerm.toLowerCase())\n  // )), [contacts, searchTerm]);\n\n  const loadContacts = useCallback(async () => {\n    try {\n      setIsLoading(true);\n      const contactsList = await ContactsService.listContacts(orderBy);\n      setHasError(false);\n      setContacts(contactsList);\n      setFilteredContacts(contactsList);\n    } catch {\n      setHasError(true);\n      setContacts([]);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [orderBy]);\n  useEffect(() => {\n    loadContacts();\n  }, [loadContacts]);\n  function handleToggleOrderBy() {\n    setOrderBy(prevState => prevState === 'asc' ? 'desc' : 'asc');\n  }\n  function handleChengeSearchTerm(event) {\n    setSearchTerm(event.target.value);\n    setFilteredContacts(contacts.filter(contact => contact.name.toLowerCase().includes(searchTerm.toLowerCase())));\n  }\n  function handleTryAgain() {\n    loadContacts();\n  }\n  function handleDeleteContact(contact) {\n    setContactBeingDeleted(contact);\n    setIsDeleteModalVisible(true);\n  }\n  function handleCloeseDeleteModal() {\n    setIsDeleteModalVisible(false);\n  }\n  async function handleConfirmDeleteFunciton() {\n    try {\n      setIsLoadingDelete(true);\n      await ContactsService.deleteContact(contactBeingDeleted.id);\n      setContacts(prevState => prevState.filter(contact => contact.id !== contactBeingDeleted.id));\n      handleCloeseDeleteModal();\n      toast({\n        type: 'success',\n        text: 'Contato deletado com sucesso!'\n      });\n    } catch {\n      toast({\n        type: 'danger',\n        text: 'Ocorreu um erro ao deletar o contato!'\n      });\n    } finally {\n      setIsLoadingDelete(false);\n    }\n  }\n  return {\n    isLoading,\n    isLoadingDelete,\n    isDeleteModalVisible,\n    contactBeingDeleted,\n    handleCloeseDeleteModal,\n    handleConfirmDeleteFunciton,\n    contacts,\n    searchTerm,\n    handleChengeSearchTerm,\n    hasError,\n    handleTryAgain,\n    filteredContacts,\n    orderBy,\n    handleToggleOrderBy,\n    handleDeleteContact\n  };\n}\n_s(useHome, \"2hNHD9qQaBEvDyGbVcoK5rHbnDc=\");","map":{"version":3,"names":["useEffect","useState","useMemo","useCallback","ContactsService","toast","useHome","_s","contacts","setContacts","orderBy","setOrderBy","searchTerm","setSearchTerm","isLoading","setIsLoading","hasError","setHasError","isDeleteModalVisible","setIsDeleteModalVisible","contactBeingDeleted","setContactBeingDeleted","isLoadingDelete","setIsLoadingDelete","filteredContacts","setFilteredContacts","loadContacts","contactsList","listContacts","handleToggleOrderBy","prevState","handleChengeSearchTerm","event","target","value","filter","contact","name","toLowerCase","includes","handleTryAgain","handleDeleteContact","handleCloeseDeleteModal","handleConfirmDeleteFunciton","deleteContact","id","type","text"],"sources":["/home/melnik/dev/jstack/mycontacts/web/src/pages/Home/useHome.js"],"sourcesContent":["import {\n  useEffect, useState, useMemo, useCallback,\n} from 'react';\n\nimport ContactsService from '../../services/ContactsService';\n\nimport toast from '../../utils/toast';\n\nexport default function useHome() {\n  const [contacts, setContacts] = useState([]);\n  const [orderBy, setOrderBy] = useState('asc');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [isLoading, setIsLoading] = useState(true);\n  const [hasError, setHasError] = useState(false);\n  const [isDeleteModalVisible, setIsDeleteModalVisible] = useState(false);\n  const [contactBeingDeleted, setContactBeingDeleted] = useState(null);\n  const [isLoadingDelete, setIsLoadingDelete] = useState(false);\n  const [filteredContacts, setFilteredContacts] = useState([]);\n\n  // const filteredContacts = useMemo(() => contacts.filter((contact) => (\n  //   contact.name.toLowerCase().includes(searchTerm.toLowerCase())\n  // )), [contacts, searchTerm]);\n\n  const loadContacts = useCallback(async () => {\n    try {\n      setIsLoading(true);\n\n      const contactsList = await ContactsService.listContacts(orderBy);\n\n      setHasError(false);\n      setContacts(contactsList);\n      setFilteredContacts(contactsList);\n    } catch {\n      setHasError(true);\n      setContacts([]);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [orderBy]);\n\n  useEffect(() => {\n    loadContacts();\n  }, [loadContacts]);\n\n  function handleToggleOrderBy() {\n    setOrderBy(\n      (prevState) => (prevState === 'asc' ? 'desc' : 'asc'),\n    );\n  }\n\n  function handleChengeSearchTerm(event) {\n    setSearchTerm(event.target.value);\n\n    setFilteredContacts(contacts.filter((contact) => (\n      contact.name.toLowerCase().includes(searchTerm.toLowerCase())\n    )));\n  }\n\n  function handleTryAgain() {\n    loadContacts();\n  }\n\n  function handleDeleteContact(contact) {\n    setContactBeingDeleted(contact);\n    setIsDeleteModalVisible(true);\n  }\n\n  function handleCloeseDeleteModal() {\n    setIsDeleteModalVisible(false);\n  }\n\n  async function handleConfirmDeleteFunciton() {\n    try {\n      setIsLoadingDelete(true);\n\n      await ContactsService.deleteContact(contactBeingDeleted.id);\n\n      setContacts((prevState) => prevState.filter(\n        (contact) => contact.id !== contactBeingDeleted.id,\n      ));\n\n      handleCloeseDeleteModal();\n\n      toast({\n        type: 'success',\n        text: 'Contato deletado com sucesso!',\n      });\n    } catch {\n      toast({\n        type: 'danger',\n        text: 'Ocorreu um erro ao deletar o contato!',\n      });\n    } finally {\n      setIsLoadingDelete(false);\n    }\n  }\n\n  return {\n    isLoading,\n    isLoadingDelete,\n    isDeleteModalVisible,\n    contactBeingDeleted,\n    handleCloeseDeleteModal,\n    handleConfirmDeleteFunciton,\n    contacts,\n    searchTerm,\n    handleChengeSearchTerm,\n    hasError,\n    handleTryAgain,\n    filteredContacts,\n    orderBy,\n    handleToggleOrderBy,\n    handleDeleteContact,\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}