{"ast":null,"code":"var _jsxFileName = \"/home/melnik/dev/jstack/mycontacts/web/src/pages/EditContact/index.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useRef } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport ContactForm from '../../components/ContactForm';\nimport PageHeader from '../../components/PageHeader';\nimport Loader from '../../components/Loader';\nimport toast from '../../utils/toast';\nimport useIsMounted from '../../hooks/useIsMounted';\nimport ContactsService from '../../services/ContactsService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function EditContact() {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [contactName, setContactName] = useState('');\n  const contactFormRef = useRef(null);\n  const {\n    id\n  } = useParams();\n  const history = useHistory();\n  const isMounted = useIsMounted();\n  useEffect(() => {\n    async function loadContact() {\n      try {\n        const contact = await ContactsService.getContactById(id);\n\n        if (isMounted()) {\n          contactFormRef.current.setFieldsValue(contact);\n          setIsLoading(false);\n          setContactName(contact.name);\n        }\n      } catch {\n        if (isMounted()) {\n          history.push('/');\n          toast({\n            type: 'danger',\n            text: 'Contato não encontrado!'\n          });\n        }\n      }\n    }\n\n    loadContact();\n  }, [id, history, isMounted]);\n\n  async function handleSubmit(formData) {\n    try {\n      const contact = {\n        name: formData.name,\n        email: formData.email,\n        phone: formData.phone,\n        category_id: formData.categoryId\n      };\n      const contactData = await ContactsService.updateContact(id, contact);\n      setContactName(contactData.name);\n      toast({\n        type: 'success',\n        text: 'Contato editado com sucesso'\n      });\n    } catch {\n      toast({\n        type: 'danger',\n        text: 'Ocorreu um erro ao editar o contato'\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Loader, {\n      isLoading: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PageHeader, {\n      title: isLoading ? 'Carregando...' : `Editar ${contactName}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContactForm, {\n      ref: contactFormRef,\n      buttonLabel: \"Salvar altera\\xE7\\xF5es\",\n      onSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(EditContact, \"gY0mpvLEk0wIR3Srj1j1xk49pdc=\", false, function () {\n  return [useParams, useHistory, useIsMounted];\n});\n\n_c = EditContact;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditContact\");","map":{"version":3,"names":["useState","useEffect","useRef","useParams","useHistory","ContactForm","PageHeader","Loader","toast","useIsMounted","ContactsService","EditContact","isLoading","setIsLoading","contactName","setContactName","contactFormRef","id","history","isMounted","loadContact","contact","getContactById","current","setFieldsValue","name","push","type","text","handleSubmit","formData","email","phone","category_id","categoryId","contactData","updateContact"],"sources":["/home/melnik/dev/jstack/mycontacts/web/src/pages/EditContact/index.js"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\n\nimport ContactForm from '../../components/ContactForm';\nimport PageHeader from '../../components/PageHeader';\nimport Loader from '../../components/Loader';\nimport toast from '../../utils/toast';\nimport useIsMounted from '../../hooks/useIsMounted';\n\nimport ContactsService from '../../services/ContactsService';\n\nexport default function EditContact() {\n  const [isLoading, setIsLoading] = useState(true);\n  const [contactName, setContactName] = useState('');\n\n  const contactFormRef = useRef(null);\n\n  const { id } = useParams();\n  const history = useHistory();\n  const isMounted = useIsMounted();\n\n  useEffect(() => {\n    async function loadContact() {\n      try {\n        const contact = await ContactsService.getContactById(\n          id,\n        );\n\n        if (isMounted()) {\n          contactFormRef.current.setFieldsValue(contact);\n          setIsLoading(false);\n          setContactName(contact.name);\n        }\n      } catch {\n        if (isMounted()) {\n          history.push('/');\n          toast({\n            type: 'danger',\n            text: 'Contato não encontrado!',\n          });\n        }\n      }\n    }\n\n    loadContact();\n  }, [id, history, isMounted]);\n\n  async function handleSubmit(formData) {\n    try {\n      const contact = {\n        name: formData.name,\n        email: formData.email,\n        phone: formData.phone,\n        category_id: formData.categoryId,\n      };\n\n      const contactData = await ContactsService.updateContact(id, contact);\n\n      setContactName(contactData.name);\n\n      toast({\n        type: 'success',\n        text: 'Contato editado com sucesso',\n      });\n    } catch {\n      toast({\n        type: 'danger',\n        text: 'Ocorreu um erro ao editar o contato',\n      });\n    }\n  }\n\n  return (\n    <>\n      <Loader isLoading={isLoading} />\n\n      <PageHeader\n        title={isLoading ? 'Carregando...' : `Editar ${contactName}`}\n      />\n\n      <ContactForm\n        ref={contactFormRef}\n        buttonLabel=\"Salvar alterações\"\n        onSubmit={handleSubmit}\n      />\n    </>\n  );\n}\n"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,MAA9B,QAA4C,OAA5C;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,kBAAtC;AAEA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AAEA,OAAOC,eAAP,MAA4B,gCAA5B;;;AAEA,eAAe,SAASC,WAAT,GAAuB;EAAA;;EACpC,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,IAAD,CAA1C;EACA,MAAM,CAACc,WAAD,EAAcC,cAAd,IAAgCf,QAAQ,CAAC,EAAD,CAA9C;EAEA,MAAMgB,cAAc,GAAGd,MAAM,CAAC,IAAD,CAA7B;EAEA,MAAM;IAAEe;EAAF,IAASd,SAAS,EAAxB;EACA,MAAMe,OAAO,GAAGd,UAAU,EAA1B;EACA,MAAMe,SAAS,GAAGV,YAAY,EAA9B;EAEAR,SAAS,CAAC,MAAM;IACd,eAAemB,WAAf,GAA6B;MAC3B,IAAI;QACF,MAAMC,OAAO,GAAG,MAAMX,eAAe,CAACY,cAAhB,CACpBL,EADoB,CAAtB;;QAIA,IAAIE,SAAS,EAAb,EAAiB;UACfH,cAAc,CAACO,OAAf,CAAuBC,cAAvB,CAAsCH,OAAtC;UACAR,YAAY,CAAC,KAAD,CAAZ;UACAE,cAAc,CAACM,OAAO,CAACI,IAAT,CAAd;QACD;MACF,CAVD,CAUE,MAAM;QACN,IAAIN,SAAS,EAAb,EAAiB;UACfD,OAAO,CAACQ,IAAR,CAAa,GAAb;UACAlB,KAAK,CAAC;YACJmB,IAAI,EAAE,QADF;YAEJC,IAAI,EAAE;UAFF,CAAD,CAAL;QAID;MACF;IACF;;IAEDR,WAAW;EACZ,CAxBQ,EAwBN,CAACH,EAAD,EAAKC,OAAL,EAAcC,SAAd,CAxBM,CAAT;;EA0BA,eAAeU,YAAf,CAA4BC,QAA5B,EAAsC;IACpC,IAAI;MACF,MAAMT,OAAO,GAAG;QACdI,IAAI,EAAEK,QAAQ,CAACL,IADD;QAEdM,KAAK,EAAED,QAAQ,CAACC,KAFF;QAGdC,KAAK,EAAEF,QAAQ,CAACE,KAHF;QAIdC,WAAW,EAAEH,QAAQ,CAACI;MAJR,CAAhB;MAOA,MAAMC,WAAW,GAAG,MAAMzB,eAAe,CAAC0B,aAAhB,CAA8BnB,EAA9B,EAAkCI,OAAlC,CAA1B;MAEAN,cAAc,CAACoB,WAAW,CAACV,IAAb,CAAd;MAEAjB,KAAK,CAAC;QACJmB,IAAI,EAAE,SADF;QAEJC,IAAI,EAAE;MAFF,CAAD,CAAL;IAID,CAhBD,CAgBE,MAAM;MACNpB,KAAK,CAAC;QACJmB,IAAI,EAAE,QADF;QAEJC,IAAI,EAAE;MAFF,CAAD,CAAL;IAID;EACF;;EAED,oBACE;IAAA,wBACE,QAAC,MAAD;MAAQ,SAAS,EAAEhB;IAAnB;MAAA;MAAA;MAAA;IAAA,QADF,eAGE,QAAC,UAAD;MACE,KAAK,EAAEA,SAAS,GAAG,eAAH,GAAsB,UAASE,WAAY;IAD7D;MAAA;MAAA;MAAA;IAAA,QAHF,eAOE,QAAC,WAAD;MACE,GAAG,EAAEE,cADP;MAEE,WAAW,EAAC,yBAFd;MAGE,QAAQ,EAAEa;IAHZ;MAAA;MAAA;MAAA;IAAA,QAPF;EAAA,gBADF;AAeD;;GA5EuBlB,W;UAMPR,S,EACCC,U,EACEK,Y;;;KARIE,W"},"metadata":{},"sourceType":"module"}