{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport toast from '../../utils/toast';\nimport useSafeAsyncAction from '../../hooks/useSafeAsyncAction';\nimport ContactsService from '../../services/ContactsService';\nexport default function useEditContact() {\n  _s();\n  const [isLoading, setIsLoading] = useState(true);\n  const [contactName, setContactName] = useState('');\n  const contactFormRef = useRef(null);\n  const {\n    id\n  } = useParams();\n  const history = useHistory();\n  const safeAsyncAction = useSafeAsyncAction();\n  useEffect(() => {\n    const controller = new AbortController();\n    async function loadContact() {\n      try {\n        const contact = await ContactsService.getContactById(id, controller.signal);\n        safeAsyncAction(() => {\n          contactFormRef.current.setFieldsValue(contact);\n          setIsLoading(false);\n          setContactName(contact.name);\n        });\n      } catch (error) {\n        if (!(error instanceof DOMException && error.name === 'AbortError')) {\n          return;\n        }\n        safeAsyncAction(() => {\n          history.push('/');\n          toast({\n            type: 'danger',\n            text: 'Contato não encontrado!'\n          });\n        });\n      }\n    }\n    loadContact();\n    return () => {\n      controller.abort();\n    };\n  }, [id, history, safeAsyncAction]);\n  async function handleSubmit(contact) {\n    try {\n      const contactData = await ContactsService.updateContact(id, contact);\n      setContactName(contactData.name);\n      toast({\n        type: 'success',\n        text: 'Contato editado com sucesso'\n      });\n    } catch {\n      toast({\n        type: 'danger',\n        text: 'Ocorreu um erro ao editar o contato'\n      });\n    }\n  }\n  return {\n    isLoading,\n    contactName,\n    contactFormRef,\n    handleSubmit\n  };\n}\n_s(useEditContact, \"MZLmwQ0a/8FDtg6wJ0EMwewl2lc=\", false, function () {\n  return [useParams, useHistory, useSafeAsyncAction];\n});","map":{"version":3,"names":["useState","useEffect","useRef","useParams","useHistory","toast","useSafeAsyncAction","ContactsService","useEditContact","_s","isLoading","setIsLoading","contactName","setContactName","contactFormRef","id","history","safeAsyncAction","controller","AbortController","loadContact","contact","getContactById","signal","current","setFieldsValue","name","error","DOMException","push","type","text","abort","handleSubmit","contactData","updateContact"],"sources":["/home/melnik/dev/jstack/mycontacts/web/src/pages/EditContact/useEditContact.js"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\n\nimport toast from '../../utils/toast';\nimport useSafeAsyncAction from '../../hooks/useSafeAsyncAction';\nimport ContactsService from '../../services/ContactsService';\n\nexport default function useEditContact() {\n  const [isLoading, setIsLoading] = useState(true);\n  const [contactName, setContactName] = useState('');\n\n  const contactFormRef = useRef(null);\n\n  const { id } = useParams();\n  const history = useHistory();\n  const safeAsyncAction = useSafeAsyncAction();\n\n  useEffect(() => {\n    const controller = new AbortController();\n\n    async function loadContact() {\n      try {\n        const contact = await ContactsService.getContactById(\n          id,\n          controller.signal,\n        );\n\n        safeAsyncAction(() => {\n          contactFormRef.current.setFieldsValue(contact);\n          setIsLoading(false);\n          setContactName(contact.name);\n        });\n      } catch (error) {\n        if (!(error instanceof DOMException && error.name === 'AbortError')) {\n          return;\n        }\n\n        safeAsyncAction(() => {\n          history.push('/');\n          toast({\n            type: 'danger',\n            text: 'Contato não encontrado!',\n          });\n        });\n      }\n    }\n\n    loadContact();\n\n    return () => {\n      controller.abort();\n    };\n  }, [id, history, safeAsyncAction]);\n\n  async function handleSubmit(contact) {\n    try {\n      const contactData = await ContactsService.updateContact(id, contact);\n\n      setContactName(contactData.name);\n\n      toast({\n        type: 'success',\n        text: 'Contato editado com sucesso',\n      });\n    } catch {\n      toast({\n        type: 'danger',\n        text: 'Ocorreu um erro ao editar o contato',\n      });\n    }\n  }\n\n  return {\n    isLoading,\n    contactName,\n    contactFormRef,\n    handleSubmit,\n  };\n}\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACnD,SAASC,SAAS,EAAEC,UAAU,QAAQ,kBAAkB;AAExD,OAAOC,KAAK,MAAM,mBAAmB;AACrC,OAAOC,kBAAkB,MAAM,gCAAgC;AAC/D,OAAOC,eAAe,MAAM,gCAAgC;AAE5D,eAAe,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACvC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMc,cAAc,GAAGZ,MAAM,CAAC,IAAI,CAAC;EAEnC,MAAM;IAAEa;EAAG,CAAC,GAAGZ,SAAS,EAAE;EAC1B,MAAMa,OAAO,GAAGZ,UAAU,EAAE;EAC5B,MAAMa,eAAe,GAAGX,kBAAkB,EAAE;EAE5CL,SAAS,CAAC,MAAM;IACd,MAAMiB,UAAU,GAAG,IAAIC,eAAe,EAAE;IAExC,eAAeC,WAAWA,CAAA,EAAG;MAC3B,IAAI;QACF,MAAMC,OAAO,GAAG,MAAMd,eAAe,CAACe,cAAc,CAClDP,EAAE,EACFG,UAAU,CAACK,MAAM,CAClB;QAEDN,eAAe,CAAC,MAAM;UACpBH,cAAc,CAACU,OAAO,CAACC,cAAc,CAACJ,OAAO,CAAC;UAC9CV,YAAY,CAAC,KAAK,CAAC;UACnBE,cAAc,CAACQ,OAAO,CAACK,IAAI,CAAC;QAC9B,CAAC,CAAC;MACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;QACd,IAAI,EAAEA,KAAK,YAAYC,YAAY,IAAID,KAAK,CAACD,IAAI,KAAK,YAAY,CAAC,EAAE;UACnE;QACF;QAEAT,eAAe,CAAC,MAAM;UACpBD,OAAO,CAACa,IAAI,CAAC,GAAG,CAAC;UACjBxB,KAAK,CAAC;YACJyB,IAAI,EAAE,QAAQ;YACdC,IAAI,EAAE;UACR,CAAC,CAAC;QACJ,CAAC,CAAC;MACJ;IACF;IAEAX,WAAW,EAAE;IAEb,OAAO,MAAM;MACXF,UAAU,CAACc,KAAK,EAAE;IACpB,CAAC;EACH,CAAC,EAAE,CAACjB,EAAE,EAAEC,OAAO,EAAEC,eAAe,CAAC,CAAC;EAElC,eAAegB,YAAYA,CAACZ,OAAO,EAAE;IACnC,IAAI;MACF,MAAMa,WAAW,GAAG,MAAM3B,eAAe,CAAC4B,aAAa,CAACpB,EAAE,EAAEM,OAAO,CAAC;MAEpER,cAAc,CAACqB,WAAW,CAACR,IAAI,CAAC;MAEhCrB,KAAK,CAAC;QACJyB,IAAI,EAAE,SAAS;QACfC,IAAI,EAAE;MACR,CAAC,CAAC;IACJ,CAAC,CAAC,MAAM;MACN1B,KAAK,CAAC;QACJyB,IAAI,EAAE,QAAQ;QACdC,IAAI,EAAE;MACR,CAAC,CAAC;IACJ;EACF;EAEA,OAAO;IACLrB,SAAS;IACTE,WAAW;IACXE,cAAc;IACdmB;EACF,CAAC;AACH;AAACxB,EAAA,CAvEuBD,cAAc;EAAA,QAMrBL,SAAS,EACRC,UAAU,EACFE,kBAAkB;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}