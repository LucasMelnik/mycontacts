{"ast":null,"code":"import delay from '../../utils/ delay';\nimport APIError from '../../errors/APIError';\n\nclass HttpClient {\n  constructor(baseURL) {\n    this.baseURL = baseURL;\n  }\n\n  async get(path) {\n    await delay(500);\n    const response = await fetch(`${this.baseURL + path}`);\n    let body = null;\n    const contentType = response.headers.get('Content-Type');\n\n    if (contentType.includes('application/json')) {\n      body = await response.json();\n    }\n\n    if (response.ok) {\n      return body;\n    }\n\n    throw new APIError(response, body);\n  }\n\n}\n\nexport default HttpClient;","map":{"version":3,"names":["delay","APIError","HttpClient","constructor","baseURL","get","path","response","fetch","body","contentType","headers","includes","json","ok"],"sources":["/home/melnik/dev/jstack/mycontacts/web/src/services/utils/HttpClient.js"],"sourcesContent":["import delay from '../../utils/ delay';\nimport APIError from '../../errors/APIError';\n\nclass HttpClient {\n  constructor(baseURL) {\n    this.baseURL = baseURL;\n  }\n\n  async get(path) {\n    await delay(500);\n\n    const response = await fetch(`${this.baseURL + path}`);\n\n    let body = null;\n    const contentType = response.headers.get('Content-Type');\n    if (contentType.includes('application/json')) {\n      body = await response.json();\n    }\n\n    if (response.ok) {\n      return body;\n    }\n\n    throw new APIError(response, body);\n  }\n}\n\nexport default HttpClient;\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,OAAOC,QAAP,MAAqB,uBAArB;;AAEA,MAAMC,UAAN,CAAiB;EACfC,WAAW,CAACC,OAAD,EAAU;IACnB,KAAKA,OAAL,GAAeA,OAAf;EACD;;EAEQ,MAAHC,GAAG,CAACC,IAAD,EAAO;IACd,MAAMN,KAAK,CAAC,GAAD,CAAX;IAEA,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAE,KAAKJ,OAAL,GAAeE,IAAK,EAAxB,CAA5B;IAEA,IAAIG,IAAI,GAAG,IAAX;IACA,MAAMC,WAAW,GAAGH,QAAQ,CAACI,OAAT,CAAiBN,GAAjB,CAAqB,cAArB,CAApB;;IACA,IAAIK,WAAW,CAACE,QAAZ,CAAqB,kBAArB,CAAJ,EAA8C;MAC5CH,IAAI,GAAG,MAAMF,QAAQ,CAACM,IAAT,EAAb;IACD;;IAED,IAAIN,QAAQ,CAACO,EAAb,EAAiB;MACf,OAAOL,IAAP;IACD;;IAED,MAAM,IAAIR,QAAJ,CAAaM,QAAb,EAAuBE,IAAvB,CAAN;EACD;;AArBc;;AAwBjB,eAAeP,UAAf"},"metadata":{},"sourceType":"module"}