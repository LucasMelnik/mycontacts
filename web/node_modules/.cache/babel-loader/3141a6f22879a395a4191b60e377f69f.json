{"ast":null,"code":"var _jsxFileName = \"/home/melnik/dev/jstack/mycontacts/web/src/pages/EditContact/index.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useRef } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport ContactForm from '../../components/ContactForm';\nimport PageHeader from '../../components/PageHeader';\nimport Loader from '../../components/Loader';\nimport toast from '../../utils/toast';\nimport ContactsService from '../../services/ContactsService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function EditContact() {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [contactName, setContactName] = useState('');\n  const contactFormRef = useRef(null);\n  const {\n    id\n  } = useParams();\n  const history = useHistory();\n  useEffect(() => {\n    async function loadContact() {\n      try {\n        const contact = await ContactsService.getContactById(id);\n        contactFormRef.current.setFieldsValue(contact);\n        setIsLoading(false);\n        setContactName(contact.name);\n      } catch {\n        history.push('/');\n        toast({\n          type: 'danger',\n          text: 'Contato não encontrado!'\n        });\n      }\n    }\n\n    loadContact();\n  }, [id, history]);\n\n  async function handleSubmit(formData) {\n    try {\n      const contact = {\n        name: formData.name,\n        email: formData.email,\n        phone: formData.phone,\n        category_id: formData.categoryId\n      };\n      const contactData = await ContactsService.updateContact(id, contact);\n      setContactName(contactData.name);\n      toast({\n        type: 'success',\n        text: 'Contato editado com sucesso'\n      });\n    } catch {\n      toast({\n        type: 'danger',\n        text: 'Ocorreu um erro ao editar o contato'\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Loader, {\n      isLoading: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PageHeader, {\n      title: isLoading ? 'Carregando...' : `Editar ${contactName}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContactForm, {\n      ref: contactFormRef,\n      buttonLabel: \"Salvar altera\\xE7\\xF5es\",\n      onSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(EditContact, \"3oQYSUhGnnQId7/gzqJe+/bCs2Q=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = EditContact;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditContact\");","map":{"version":3,"names":["useState","useEffect","useRef","useParams","useHistory","ContactForm","PageHeader","Loader","toast","ContactsService","EditContact","isLoading","setIsLoading","contactName","setContactName","contactFormRef","id","history","loadContact","contact","getContactById","current","setFieldsValue","name","push","type","text","handleSubmit","formData","email","phone","category_id","categoryId","contactData","updateContact"],"sources":["/home/melnik/dev/jstack/mycontacts/web/src/pages/EditContact/index.js"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\n\nimport ContactForm from '../../components/ContactForm';\nimport PageHeader from '../../components/PageHeader';\nimport Loader from '../../components/Loader';\nimport toast from '../../utils/toast';\n\nimport ContactsService from '../../services/ContactsService';\n\nexport default function EditContact() {\n  const [isLoading, setIsLoading] = useState(true);\n  const [contactName, setContactName] = useState('');\n\n  const contactFormRef = useRef(null);\n\n  const { id } = useParams();\n  const history = useHistory();\n\n  useEffect(() => {\n    async function loadContact() {\n      try {\n        const contact = await ContactsService.getContactById(\n          id,\n        );\n\n        contactFormRef.current.setFieldsValue(contact);\n        setIsLoading(false);\n        setContactName(contact.name);\n      } catch {\n        history.push('/');\n        toast({\n          type: 'danger',\n          text: 'Contato não encontrado!',\n        });\n      }\n    }\n\n    loadContact();\n  }, [id, history]);\n\n  async function handleSubmit(formData) {\n    try {\n      const contact = {\n        name: formData.name,\n        email: formData.email,\n        phone: formData.phone,\n        category_id: formData.categoryId,\n      };\n\n      const contactData = await ContactsService.updateContact(id, contact);\n\n      setContactName(contactData.name);\n\n      toast({\n        type: 'success',\n        text: 'Contato editado com sucesso',\n      });\n    } catch {\n      toast({\n        type: 'danger',\n        text: 'Ocorreu um erro ao editar o contato',\n      });\n    }\n  }\n\n  return (\n    <>\n      <Loader isLoading={isLoading} />\n\n      <PageHeader\n        title={isLoading ? 'Carregando...' : `Editar ${contactName}`}\n      />\n\n      <ContactForm\n        ref={contactFormRef}\n        buttonLabel=\"Salvar alterações\"\n        onSubmit={handleSubmit}\n      />\n    </>\n  );\n}\n"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,MAA9B,QAA4C,OAA5C;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,kBAAtC;AAEA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AAEA,OAAOC,eAAP,MAA4B,gCAA5B;;;AAEA,eAAe,SAASC,WAAT,GAAuB;EAAA;;EACpC,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,IAAD,CAA1C;EACA,MAAM,CAACa,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,CAAC,EAAD,CAA9C;EAEA,MAAMe,cAAc,GAAGb,MAAM,CAAC,IAAD,CAA7B;EAEA,MAAM;IAAEc;EAAF,IAASb,SAAS,EAAxB;EACA,MAAMc,OAAO,GAAGb,UAAU,EAA1B;EAEAH,SAAS,CAAC,MAAM;IACd,eAAeiB,WAAf,GAA6B;MAC3B,IAAI;QACF,MAAMC,OAAO,GAAG,MAAMV,eAAe,CAACW,cAAhB,CACpBJ,EADoB,CAAtB;QAIAD,cAAc,CAACM,OAAf,CAAuBC,cAAvB,CAAsCH,OAAtC;QACAP,YAAY,CAAC,KAAD,CAAZ;QACAE,cAAc,CAACK,OAAO,CAACI,IAAT,CAAd;MACD,CARD,CAQE,MAAM;QACNN,OAAO,CAACO,IAAR,CAAa,GAAb;QACAhB,KAAK,CAAC;UACJiB,IAAI,EAAE,QADF;UAEJC,IAAI,EAAE;QAFF,CAAD,CAAL;MAID;IACF;;IAEDR,WAAW;EACZ,CApBQ,EAoBN,CAACF,EAAD,EAAKC,OAAL,CApBM,CAAT;;EAsBA,eAAeU,YAAf,CAA4BC,QAA5B,EAAsC;IACpC,IAAI;MACF,MAAMT,OAAO,GAAG;QACdI,IAAI,EAAEK,QAAQ,CAACL,IADD;QAEdM,KAAK,EAAED,QAAQ,CAACC,KAFF;QAGdC,KAAK,EAAEF,QAAQ,CAACE,KAHF;QAIdC,WAAW,EAAEH,QAAQ,CAACI;MAJR,CAAhB;MAOA,MAAMC,WAAW,GAAG,MAAMxB,eAAe,CAACyB,aAAhB,CAA8BlB,EAA9B,EAAkCG,OAAlC,CAA1B;MAEAL,cAAc,CAACmB,WAAW,CAACV,IAAb,CAAd;MAEAf,KAAK,CAAC;QACJiB,IAAI,EAAE,SADF;QAEJC,IAAI,EAAE;MAFF,CAAD,CAAL;IAID,CAhBD,CAgBE,MAAM;MACNlB,KAAK,CAAC;QACJiB,IAAI,EAAE,QADF;QAEJC,IAAI,EAAE;MAFF,CAAD,CAAL;IAID;EACF;;EAED,oBACE;IAAA,wBACE,QAAC,MAAD;MAAQ,SAAS,EAAEf;IAAnB;MAAA;MAAA;MAAA;IAAA,QADF,eAGE,QAAC,UAAD;MACE,KAAK,EAAEA,SAAS,GAAG,eAAH,GAAsB,UAASE,WAAY;IAD7D;MAAA;MAAA;MAAA;IAAA,QAHF,eAOE,QAAC,WAAD;MACE,GAAG,EAAEE,cADP;MAEE,WAAW,EAAC,yBAFd;MAGE,QAAQ,EAAEY;IAHZ;MAAA;MAAA;MAAA;IAAA,QAPF;EAAA,gBADF;AAeD;;GAvEuBjB,W;UAMPP,S,EACCC,U;;;KAPMM,W"},"metadata":{},"sourceType":"module"}