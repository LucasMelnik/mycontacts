{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect, useImperativeHandle } from 'react';\nimport isEmailValid from '../../utils/isEmailValid';\nimport formatPhone from '../../utils/formatPhone';\nimport useErrors from '../../hooks/useErrors';\nimport CategoriesService from '../../services/CategoriesService';\nimport useSafeAsyncState from '../../hooks/useSafeAsyncState';\nexport default function useContactForm(onSubmit, ref) {\n  _s();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [phone, setPhone] = useState('');\n  const [categoryId, setCategoryId] = useState('');\n  const [categories, setCategories] = useSafeAsyncState([]);\n  const [isLoadingCategories, setIsLoadingCategories] = useSafeAsyncState(true);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const {\n    errors,\n    setError,\n    removeError,\n    getErrorMessageByFieldName\n  } = useErrors();\n  const isFormValid = name && errors.length === 0;\n  useImperativeHandle(ref, () => ({\n    setFieldsValue: contact => {\n      var _contact$name, _contact$email, _contact$phone, _contact$category$id;\n      setName((_contact$name = contact.name) !== null && _contact$name !== void 0 ? _contact$name : '');\n      setEmail((_contact$email = contact.email) !== null && _contact$email !== void 0 ? _contact$email : '');\n      setPhone(formatPhone((_contact$phone = contact.phone) !== null && _contact$phone !== void 0 ? _contact$phone : ''));\n      setCategoryId((_contact$category$id = contact.category.id) !== null && _contact$category$id !== void 0 ? _contact$category$id : '');\n    },\n    resetFields: () => {\n      setName('');\n      setEmail('');\n      setPhone('');\n      setCategoryId('');\n    }\n  }), []);\n  useEffect(() => {\n    const controller = new AbortController();\n    async function loadCategories() {\n      try {\n        const categoriesList = await CategoriesService.listCategories();\n        setCategories(categoriesList);\n      } catch {} finally {\n        setIsLoadingCategories(false);\n      }\n    }\n    loadCategories();\n    return () => {\n      controller.abort();\n    };\n  }, [setCategories, setIsLoadingCategories]);\n  function handleNameChange(event) {\n    setName(event.target.value);\n    if (!event.target.value) {\n      setError({\n        field: 'name',\n        message: 'Nome é obrigatório!'\n      });\n    } else {\n      removeError('name');\n    }\n  }\n  function handleEmailChange(event) {\n    setEmail(event.target.value);\n    if (event.target.value && !isEmailValid(event.target.value)) {\n      setError({\n        field: 'email',\n        message: 'E-mail inválido'\n      });\n    } else {\n      removeError('email');\n    }\n  }\n  function handlePhoneChange(event) {\n    setPhone(formatPhone(event.target.value));\n  }\n  async function handleSubmit(event) {\n    event.preventDefault();\n    setIsSubmitting(true);\n    await onSubmit({\n      name,\n      email,\n      phone,\n      categoryId\n    });\n    setIsSubmitting(false);\n  }\n  return {\n    handleSubmit,\n    getErrorMessageByFieldName,\n    name,\n    handleNameChange,\n    isSubmitting,\n    email,\n    handleEmailChange,\n    phone,\n    handlePhoneChange,\n    categories,\n    isFormValid,\n    setCategoryId,\n    isLoadingCategories,\n    categoryId\n  };\n}\n_s(useContactForm, \"aihPRpHP2tX2VGTKpTohi4S5dkI=\", false, function () {\n  return [useSafeAsyncState, useSafeAsyncState, useErrors];\n});","map":{"version":3,"names":["useState","useEffect","useImperativeHandle","isEmailValid","formatPhone","useErrors","CategoriesService","useSafeAsyncState","useContactForm","onSubmit","ref","_s","name","setName","email","setEmail","phone","setPhone","categoryId","setCategoryId","categories","setCategories","isLoadingCategories","setIsLoadingCategories","isSubmitting","setIsSubmitting","errors","setError","removeError","getErrorMessageByFieldName","isFormValid","length","setFieldsValue","contact","_contact$name","_contact$email","_contact$phone","_contact$category$id","category","id","resetFields","controller","AbortController","loadCategories","categoriesList","listCategories","abort","handleNameChange","event","target","value","field","message","handleEmailChange","handlePhoneChange","handleSubmit","preventDefault"],"sources":["/home/melnik/dev/jstack/mycontacts/web/src/components/ContactForm/useContactForm.js"],"sourcesContent":["import {\n  useState, useEffect, useImperativeHandle,\n} from 'react';\n\nimport isEmailValid from '../../utils/isEmailValid';\nimport formatPhone from '../../utils/formatPhone';\nimport useErrors from '../../hooks/useErrors';\nimport CategoriesService from '../../services/CategoriesService';\n\nimport useSafeAsyncState from '../../hooks/useSafeAsyncState';\n\nexport default function useContactForm(onSubmit, ref) {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [phone, setPhone] = useState('');\n  const [categoryId, setCategoryId] = useState('');\n  const [categories, setCategories] = useSafeAsyncState([]);\n  const [isLoadingCategories, setIsLoadingCategories] = useSafeAsyncState(true);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const {\n    errors, setError, removeError, getErrorMessageByFieldName,\n  } = useErrors();\n\n  const isFormValid = (name && errors.length === 0);\n\n  useImperativeHandle(ref, () => ({\n    setFieldsValue: (contact) => {\n      setName(contact.name ?? '');\n      setEmail(contact.email ?? '');\n      setPhone(formatPhone(contact.phone ?? ''));\n      setCategoryId(contact.category.id ?? '');\n    },\n\n    resetFields: () => {\n      setName('');\n      setEmail('');\n      setPhone('');\n      setCategoryId('');\n    },\n  }), []);\n\n  useEffect(() => {\n    const controller = new AbortController();\n\n    async function loadCategories() {\n      try {\n        const categoriesList = await CategoriesService.listCategories();\n\n        setCategories(categoriesList);\n      } catch {} finally {\n        setIsLoadingCategories(false);\n      }\n    }\n\n    loadCategories();\n\n    return () => {\n      controller.abort();\n    };\n  }, [setCategories, setIsLoadingCategories]);\n\n  function handleNameChange(event) {\n    setName(event.target.value);\n\n    if (!event.target.value) {\n      setError({ field: 'name', message: 'Nome é obrigatório!' });\n    } else {\n      removeError('name');\n    }\n  }\n\n  function handleEmailChange(event) {\n    setEmail(event.target.value);\n\n    if (event.target.value && !isEmailValid(event.target.value)) {\n      setError({ field: 'email', message: 'E-mail inválido' });\n    } else {\n      removeError('email');\n    }\n  }\n\n  function handlePhoneChange(event) {\n    setPhone(formatPhone(event.target.value));\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n\n    setIsSubmitting(true);\n\n    await onSubmit({\n      name, email, phone, categoryId,\n    });\n\n    setIsSubmitting(false);\n  }\n\n  return {\n    handleSubmit,\n    getErrorMessageByFieldName,\n    name,\n    handleNameChange,\n    isSubmitting,\n    email,\n    handleEmailChange,\n    phone,\n    handlePhoneChange,\n    categories,\n    isFormValid,\n    setCategoryId,\n    isLoadingCategories,\n    categoryId,\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}