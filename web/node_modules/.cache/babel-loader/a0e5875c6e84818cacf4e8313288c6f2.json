{"ast":null,"code":"var _jsxFileName = \"/home/melnik/dev/jstack/mycontacts/web/src/components/ContactForm/index.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport isEmailValid from '../../utils/isEmailValid';\nimport { Form, ButtonContainer } from './styles';\nimport FormGroup from '../FormGroup';\nimport Input from '../Input';\nimport Select from '../Select';\nimport Button from '../Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ContactForm(_ref) {\n  _s();\n\n  let {\n    buttonLabel\n  } = _ref;\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [phone, setPhone] = useState('');\n  const [category, setCategory] = useState('');\n  const [errors, setErrors] = useState([]);\n\n  function handleNameChange(event) {\n    setName(event.target.value);\n\n    if (!event.target.value) {\n      setErrors(prevState => [...prevState, {\n        field: 'name',\n        message: 'Nome é obrigatório'\n      }]);\n    } else {\n      setErrors(prevState => prevState.filter(error => error.field !== 'name'));\n    }\n  }\n\n  function handleEmailChange(event) {\n    setEmail(event.target.value);\n\n    if (event.target.value && !isEmailValid(event.target.value)) {\n      const errorAlreadyExists = errors.find(error => error.field === 'email');\n\n      if (errorAlreadyExists) {\n        return;\n      }\n\n      setErrors(prevState => [...prevState, {\n        field: 'email',\n        message: 'E-mail inválido'\n      }]);\n    } else {\n      setErrors(prevState => prevState.filter(error => error.field !== 'email'));\n    }\n  }\n\n  function getErrorMessageByFieldName(fieldName) {\n    return errors.find(error => error.field === fieldName).message;\n  }\n\n  console.log(errors);\n\n  function handleSubmit(event) {\n    console.log({\n      name,\n      email,\n      phone,\n      category\n    });\n    event.preventDefault();\n  }\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Nome\",\n        value: name,\n        onChange: handleNameChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"E-mail\",\n        value: email,\n        onChange: handleEmailChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Telefone\",\n        value: phone,\n        onChange: event => setPhone(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        value: category,\n        onChange: event => setCategory(event.target.value),\n        children: /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"instagram\",\n          children: \"Instagram\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonContainer, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: buttonLabel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ContactForm, \"XWSmpLmzf3AxtUI8UAkMn7xtGSc=\");\n\n_c = ContactForm;\nContactForm.propTypes = {\n  buttonLabel: PropTypes.string.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"names":["PropTypes","useState","isEmailValid","Form","ButtonContainer","FormGroup","Input","Select","Button","ContactForm","buttonLabel","name","setName","email","setEmail","phone","setPhone","category","setCategory","errors","setErrors","handleNameChange","event","target","value","prevState","field","message","filter","error","handleEmailChange","errorAlreadyExists","find","getErrorMessageByFieldName","fieldName","console","log","handleSubmit","preventDefault","propTypes","string","isRequired"],"sources":["/home/melnik/dev/jstack/mycontacts/web/src/components/ContactForm/index.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { useState } from 'react';\n\nimport isEmailValid from '../../utils/isEmailValid';\n\nimport { Form, ButtonContainer } from './styles';\n\nimport FormGroup from '../FormGroup';\nimport Input from '../Input';\nimport Select from '../Select';\nimport Button from '../Button';\n\nexport default function ContactForm({ buttonLabel }) {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [phone, setPhone] = useState('');\n  const [category, setCategory] = useState('');\n  const [errors, setErrors] = useState([]);\n\n  function handleNameChange(event) {\n    setName(event.target.value);\n\n    if (!event.target.value) {\n      setErrors((prevState) => [\n        ...prevState,\n        { field: 'name', message: 'Nome é obrigatório' },\n      ]);\n    } else {\n      setErrors((prevState) => prevState.filter(\n        (error) => error.field !== 'name',\n      ));\n    }\n  }\n\n  function handleEmailChange(event) {\n    setEmail(event.target.value);\n\n    if (event.target.value && !isEmailValid(event.target.value)) {\n      const errorAlreadyExists = errors.find((error) => error.field === 'email');\n\n      if (errorAlreadyExists) {\n        return;\n      }\n\n      setErrors((prevState) => [\n        ...prevState,\n        { field: 'email', message: 'E-mail inválido' },\n      ]);\n    } else {\n      setErrors((prevState) => prevState.filter(\n        (error) => error.field !== 'email',\n      ));\n    }\n  }\n\n  function getErrorMessageByFieldName(fieldName) {\n    return errors.find((error) => error.field === fieldName).message;\n  }\n\n  console.log(errors);\n\n  function handleSubmit(event) {\n    console.log({\n      name, email, phone, category,\n    });\n\n    event.preventDefault();\n  }\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <FormGroup>\n        <Input\n          placeholder=\"Nome\"\n          value={name}\n          onChange={handleNameChange}\n        />\n      </FormGroup>\n\n      <FormGroup>\n        <Input\n          placeholder=\"E-mail\"\n          value={email}\n          onChange={handleEmailChange}\n        />\n      </FormGroup>\n\n      <FormGroup>\n        <Input\n          placeholder=\"Telefone\"\n          value={phone}\n          onChange={(event) => setPhone(event.target.value)}\n        />\n      </FormGroup>\n\n      <FormGroup>\n        <Select\n          value={category}\n          onChange={(event) => setCategory(event.target.value)}\n        >\n          <option value=\"instagram\">Instagram</option>\n        </Select>\n      </FormGroup>\n\n      <ButtonContainer>\n        <Button type=\"submit\">\n          {buttonLabel}\n        </Button>\n      </ButtonContainer>\n    </Form>\n  );\n}\n\nContactForm.propTypes = {\n  buttonLabel: PropTypes.string.isRequired,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}